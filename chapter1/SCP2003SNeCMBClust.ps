%!PS-Adobe-3.0
%%Title: (SCP2003SNeCMBClust.ai)
%%Version: 1 2
%%CreationDate: 10:24:00 AM 05/20/2008
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 1 792 613 1584
%%HiResBoundingBox: 0.5 791.5 612.5 1583.5
%%Pages: 1
%%DocumentProcessColors: (atend)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W2 vm op crd os scsa T h EF bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0

%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (
) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 1 792 613 1584
%%PageHiResBoundingBox: 0.5 791.5 612.5 1583.5
%%PageCropBox: 0.5 -0.5 612.5 791.5
gsave
%%BeginPageSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
userdict /pgsave save put
0.0 0.0 612.0 792.0 0.5 -0.5 612.5 791.5 0 0 false false false false PDF begin PDFVars begin ASR end end
%ADOBeginSubsetFont: JHABAA+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /JHABAA+Symbol def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 42996 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 673 688 487 500] def
/StdHW [92] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 32 /space/exclam/universal/numbersign/existential/percent
/ampersand/suchthat/parenleft/parenright/asteriskmath/plus
/comma/minus/period/slash/zero/one
/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal
/greater/question/congruent/Alpha/Beta/Chi
/Delta/Epsilon/Phi/Gamma/Eta/Iota
/theta1/Kappa/Lambda/Mu/Nu/Omicron
/Pi/Theta/Rho/Sigma/Tau/Upsilon
/sigma1/Omega/Xi/Psi/Zeta/bracketleft
/therefore/bracketright/perpendicular/underscore/radicalex/alpha
/beta/chi/delta/epsilon/phi/gamma
/eta/iota/phi1/kappa/lambda/mu
/nu/omicron/pi/theta/rho/sigma
/tau/upsilon/omega1/omega/xi/psi
/zeta/braceleft/bar/braceright/similar 160 /Euro
/Upsilon1/minute/lessequal/fraction/infinity/florin
/club/diamond/heart/spade/arrowboth/arrowleft
/arrowup/arrowright/arrowdown/degree/plusminus/second
/greaterequal/multiply/proportional/partialdiff/bullet/divide
/notequal/equivalence/approxequal/ellipsis/arrowvertex/arrowhorizex
/carriagereturn/aleph/Ifraktur/Rfraktur/weierstrass/circlemultiply
/circleplus/emptyset/intersection/union/propersuperset/reflexsuperset
/notsubset/propersubset/reflexsubset/element/notelement/angle
/gradient/registerserif/copyrightserif/trademarkserif/product/radical
/dotmath/logicalnot/logicaland/logicalor/arrowdblboth/arrowdblleft
/arrowdblup/arrowdblright/arrowdbldown/lozenge/angleleft/registersans
/copyrightsans/trademarksans/summation/parenlefttp/parenleftex/parenleftbt
/bracketlefttp/bracketleftex/bracketleftbt/bracelefttp/braceleftmid/braceleftbt
/braceex 241 /angleright/integral/integraltp/integralex/integralbt
/parenrighttp/parenrightex/parenrightbt/bracketrighttp/bracketrightex/bracketrightbt
/bracerighttp/bracerightmid/bracerightbt
/N46 (JHABAA+Symbol) -1 TZ
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /GONAAA+Helvetica-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 43143 def
/FontBBox {-170 -228 1003 962} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 532 546 698 710] def
/OtherBlues [271 283 401 409 -217 -208] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [118] def
/StdVW [140] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N49 (GONAAA+Helvetica-Bold) 1 TZ
%ADOBeginSubsetFont: JLBBAA+Times-Roman Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /JLBBAA+Times-Roman def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 43146 def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/FamilyBlues [-14 0 662 676 450 460 683 683] def
/FamilyOtherBlues [262 270 -218 -217] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N55 (JLBBAA+Times-Roman) 1 TZ
%ADOBeginSubsetFont: ZFNBAA+Helvetica Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /ZFNBAA+Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 43142 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 523 538 688 703] def
/OtherBlues [270 281 -220 -207] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N52 (ZFNBAA+Helvetica) 1 TZ
%%EndPageSetup
q
0.5 -0.5 m
612.5 -0.5 l
612.5 791.5 l
0.5 791.5 l
h
W
n
q
n
186.957 544.999 m
162.965 543.993 l
180.145 134.34 l
203.22 133.716 l
186.957 544.999 l
h
W
n
n
178.212 132.716 m
177.676 145.481 l
204.22 146.595 l
204.22 133.295 l
190.415 132.716 l
178.212 132.716 l
h
[/DeviceCMYK] cs 0.0 0.0 0.0 0.0 sc
eofill
n
177.676 145.481 m
177.118 158.757 l
204.22 159.894 l
204.22 146.595 l
177.676 145.481 l
h
0.0 0.0844 0.116 0.0 sc
eofill
n
177.118 158.757 m
176.56 172.033 l
204.22 173.193 l
204.22 159.894 l
177.118 158.757 l
h
0.0 0.1431 0.1968 0.0 sc
eofill
n
176.56 172.033 m
176.002 185.309 l
204.021 186.484 l
204.22 181.757 l
204.22 173.193 l
176.56 172.033 l
h
0.0 0.1827 0.2512 0.0 sc
eofill
n
176.002 185.309 m
175.445 198.585 l
203.463 199.76 l
204.021 186.484 l
176.002 185.309 l
h
0.0 0.2081 0.2861 0.0 sc
eofill
n
175.445 198.585 m
174.887 211.861 l
202.906 213.036 l
203.463 199.76 l
175.445 198.585 l
h
0.0 0.2236 0.3074 0.0 sc
eofill
n
174.887 211.861 m
174.329 225.137 l
202.348 226.311 l
202.906 213.036 l
174.887 211.861 l
h
0.0 0.2324 0.3195 0.0 sc
eofill
n
174.329 225.137 m
173.771 238.413 l
201.79 239.588 l
202.348 226.311 l
174.329 225.137 l
h
0.0 0.2369 0.3258 0.0 sc
eofill
n
173.771 238.413 m
173.213 251.689 l
201.232 252.864 l
201.79 239.588 l
173.771 238.413 l
h
0.0 0.239 0.3286 0.0 sc
eofill
n
173.213 251.689 m
172.656 264.965 l
200.675 266.14 l
201.232 252.864 l
173.213 251.689 l
h
0.0 0.2397 0.3297 0.0 sc
eofill
n
172.656 264.965 m
172.098 278.241 l
200.117 279.416 l
200.675 266.14 l
172.656 264.965 l
h
0.0 0.24 0.3299 0.0 sc
eofill
n
172.098 278.241 m
171.54 291.517 l
199.559 292.691 l
200.117 279.416 l
172.098 278.241 l
h
0.0 0.24 0.33 0.0 sc
eofill
n
171.54 291.517 m
170.982 304.793 l
199.001 305.968 l
199.559 292.691 l
171.54 291.517 l
h
eofill
n
170.982 304.793 m
170.206 323.272 l
198.225 324.446 l
199.001 305.968 l
170.982 304.793 l
h
eofill
n
170.206 323.272 m
169.43 341.75 l
197.449 342.926 l
198.225 324.446 l
170.206 323.272 l
h
0.0 0.2291 0.315 0.0 sc
eofill
n
169.43 341.75 m
168.653 360.229 l
196.672 361.404 l
197.449 342.926 l
169.43 341.75 l
h
0.0 0.2142 0.2945 0.0 sc
eofill
n
168.653 360.229 m
167.877 378.708 l
195.896 379.883 l
196.672 361.404 l
168.653 360.229 l
h
0.0 0.1972 0.2712 0.0 sc
eofill
n
167.877 378.708 m
167.101 397.186 l
195.12 398.361 l
195.896 379.883 l
167.877 378.708 l
h
0.0 0.1788 0.2459 0.0 sc
eofill
n
167.101 397.186 m
166.324 415.665 l
194.343 416.84 l
195.12 398.361 l
167.101 397.186 l
h
0.0 0.1592 0.2189 0.0 sc
eofill
n
166.324 415.665 m
165.548 434.144 l
193.567 435.319 l
194.343 416.84 l
166.324 415.665 l
h
0.0 0.1387 0.1907 0.0 sc
eofill
n
165.548 434.144 m
164.771 452.623 l
192.79 453.798 l
193.567 435.319 l
165.548 434.144 l
h
0.0 0.1172 0.1612 0.0 sc
eofill
n
164.771 452.623 m
163.996 471.102 l
192.014 472.276 l
192.79 453.798 l
164.771 452.623 l
h
0.0 0.0951 0.1307 0.0 sc
eofill
n
163.996 471.102 m
163.219 489.58 l
191.238 490.755 l
192.014 472.276 l
163.996 471.102 l
h
0.0 0.0722 0.0993 0.0 sc
eofill
n
163.219 489.58 m
162.443 508.059 l
190.461 509.234 l
191.238 490.755 l
163.219 489.58 l
h
0.0 0.0487 0.067 0.0 sc
eofill
n
162.443 508.059 m
161.965 519.437 l
161.965 526.55 l
189.685 527.713 l
190.461 509.234 l
162.443 508.059 l
h
0.0 0.0246 0.0338 0.0 sc
eofill
n
161.965 545.062 m
184.32 545.999 l
188.917 545.999 l
189.685 527.713 l
161.965 526.55 l
161.965 545.062 l
h
0.0 0.0 0.0 0.0 sc
eofill
Q
q
n
185.165 160.969 m
178.479 308.786 l
178.323 311.965 l
178.167 315.508 l
177.994 319.032 l
177.821 322.576 l
177.631 326.119 l
177.441 329.643 l
177.233 333.186 l
177.216 333.391 l
177.078 336.729 l
176.922 340.255 l
176.749 343.799 l
176.576 347.342 l
176.386 350.865 l
176.213 354.409 l
176.005 357.952 l
175.971 358.62 l
175.85 361.476 l
175.694 365.019 l
175.538 368.562 l
175.365 372.087 l
175.192 375.63 l
175.02 379.174 l
174.83 382.697 l
174.726 384.58 l
174.656 386.241 l
174.501 389.785 l
174.345 393.309 l
174.189 396.852 l
174.033 400.396 l
173.861 403.918 l
173.688 407.462 l
173.498 410.985 l
173.48 411.572 l
173.359 414.528 l
173.221 418.072 l
173.065 421.597 l
172.909 425.14 l
172.771 428.684 l
172.598 432.207 l
172.442 435.75 l
170.609 492.454 l
181.109 493.454 l
184.238 435.75 l
184.48 432.207 l
184.723 428.684 l
184.723 428.562 l
184.93 425.14 l
185.138 421.597 l
185.346 418.072 l
185.553 414.528 l
185.76 410.985 l
185.968 407.462 l
185.968 407.382 l
186.158 403.918 l
186.349 400.396 l
186.521 396.852 l
186.712 393.309 l
186.902 389.785 l
187.092 386.241 l
187.23 383.689 l
187.265 382.697 l
187.439 379.174 l
187.611 375.63 l
187.767 372.087 l
187.94 368.562 l
188.095 365.019 l
188.268 361.476 l
188.441 357.952 l
188.476 357.202 l
188.597 354.409 l
188.735 350.865 l
188.891 347.342 l
189.029 343.799 l
189.185 340.255 l
189.341 336.729 l
189.479 333.186 l
189.635 329.643 l
189.722 327.457 l
189.773 326.119 l
189.912 322.576 l
190.033 319.032 l
190.171 315.508 l
190.292 311.965 l
197.757 166.78 l
185.165 160.969 l
h
W
n
n
[/DeviceCMYK] cs 0.0 0.15 0.3 0.0 sc
169.608902 159.968796 29.148392 5.491211 rectfill

n
0.0 0.1499 0.3004 0.0 sc
169.608902 165.460007 29.148392 6.171799 rectfill

n
0.0001 0.1498 0.3021 0.0 sc
169.608902 171.631805 29.148392 6.172897 rectfill

n
0.0002 0.1496 0.3051 0.0 sc
169.608902 177.804703 29.148392 6.172791 rectfill

n
0.0004 0.1492 0.3098 0.0 sc
169.608902 183.977493 29.148392 6.171906 rectfill

n
0.0007 0.1486 0.3161 0.0 sc
169.608902 190.149399 29.148392 6.172897 rectfill

n
0.001 0.1479 0.3243 0.0 sc
169.608902 196.322296 29.148392 6.172806 rectfill

n
0.0015 0.147 0.3343 0.0 sc
169.608902 202.495102 29.148392 6.171906 rectfill

n
0.002 0.146 0.3462 0.0 sc
169.608902 208.667007 29.148392 6.172791 rectfill

n
0.0026 0.1448 0.3601 0.0 sc
169.608902 214.839798 29.148392 6.172897 rectfill

n
0.0033 0.1435 0.376 0.0 sc
169.608902 221.012695 29.148392 6.172806 rectfill

n
0.004 0.1419 0.3941 0.0 sc
169.608902 227.185501 29.148392 6.171906 rectfill

n
0.0049 0.1402 0.4143 0.0 sc
169.608902 233.357407 29.148392 6.172897 rectfill

n
0.0058 0.1383 0.4367 0.0 sc
169.608902 239.530304 29.148392 6.172791 rectfill

n
0.0069 0.1362 0.4613 0.0 sc
169.608902 245.703094 29.148392 6.171906 rectfill

n
0.0081 0.1339 0.4882 0.0 sc
169.608902 251.875000 29.148392 6.172913 rectfill

n
0.0093 0.1314 0.5174 0.0 sc
169.608902 258.047913 29.148392 6.172791 rectfill

n
0.0107 0.1287 0.5489 0.0 sc
169.608902 264.220703 29.148392 6.171906 rectfill

n
0.0121 0.1257 0.5828 0.0 sc
169.608902 270.392609 29.148392 6.172791 rectfill

n
0.0137 0.1226 0.6192 0.0 sc
169.608902 276.565399 29.148392 6.172913 rectfill

n
0.0153 0.1193 0.6579 0.0 sc
169.608902 282.738312 29.148392 6.171875 rectfill

n
0.0171 0.1158 0.6992 0.0 sc
169.608902 288.910187 29.148392 6.172821 rectfill

n
0.019 0.112 0.7429 0.0 sc
169.608902 295.083008 29.148392 6.172882 rectfill

n
0.021 0.1081 0.7892 0.0 sc
169.608902 301.255890 29.148392 6.171814 rectfill

n
0.0231 0.1039 0.838 0.0 sc
169.608902 307.427704 29.148392 6.172882 rectfill

n
0.0253 0.0995 0.8894 0.0 sc
169.608902 313.600586 29.148392 6.172821 rectfill

n
0.0276 0.0948 0.9434 0.0 sc
169.608902 319.773407 29.148392 6.172882 rectfill

n
0.03 0.09 1.0 0.0 sc
169.608902 325.946289 29.148392 6.171906 rectfill

n
169.608902 332.118195 29.148392 4.083008 rectfill

n
169.608902 336.201202 29.148392 4.083984 rectfill

n
169.608902 340.285187 29.148392 4.083008 rectfill

n
169.608902 344.368195 29.148392 4.083893 rectfill

n
169.608902 348.452087 29.148392 4.083099 rectfill

n
169.608902 352.535187 29.148392 4.083008 rectfill

n
0.03 0.09 0.9999 0.0 sc
169.608902 356.618195 29.148392 4.083893 rectfill

n
0.03 0.09 0.9998 0.0 sc
169.608902 360.702087 29.148392 4.083099 rectfill

n
0.03 0.09 0.9996 0.0 sc
169.608902 364.785187 29.148392 4.083008 rectfill

n
0.03 0.0899 0.9993 0.0 sc
169.608902 368.868195 29.148392 4.083893 rectfill

n
0.03 0.0899 0.9989 0.0 sc
169.608902 372.952087 29.148392 4.083099 rectfill

n
0.0299 0.0898 0.9982 0.0 sc
169.608902 377.035187 29.148392 4.083923 rectfill

n
0.0299 0.0897 0.9972 0.0 sc
169.608902 381.119110 29.148392 4.082977 rectfill

n
0.0299 0.0896 0.9958 0.0 sc
169.608902 385.202087 29.148392 4.083099 rectfill

n
0.0298 0.0894 0.9939 0.0 sc
169.608902 389.285187 29.148392 4.083923 rectfill

n
0.0297 0.0892 0.9914 0.0 sc
169.608902 393.369110 29.148392 4.082977 rectfill

n
0.0296 0.0889 0.9881 0.0 sc
169.608902 397.452087 29.148392 4.083527 rectfill

n
0.0295 0.0885 0.984 0.0 sc
169.608902 401.535614 29.148392 4.083496 rectfill

n
0.0294 0.0881 0.9787 0.0 sc
169.608902 405.619110 29.148392 4.083496 rectfill

n
0.0292 0.0875 0.9721 0.0 sc
169.608902 409.702606 29.148392 4.083008 rectfill

n
0.0289 0.0867 0.964 0.0 sc
169.608902 413.785614 29.148392 4.083496 rectfill

n
0.0286 0.0859 0.9541 0.0 sc
169.608902 417.869110 29.148392 4.083496 rectfill

n
0.0283 0.0848 0.9421 0.0 sc
169.608902 421.952606 29.148392 4.083496 rectfill

n
0.0278 0.0835 0.9278 0.0 sc
169.608902 426.036102 29.148392 4.083008 rectfill

n
0.0273 0.082 0.9108 0.0 sc
169.608902 430.119110 29.148392 4.083496 rectfill

n
0.0267 0.0802 0.8907 0.0 sc
169.608902 434.202606 29.148392 4.083496 rectfill

n
0.026 0.078 0.8671 0.0 sc
169.608902 438.286102 29.148392 4.083496 rectfill

n
0.0252 0.0756 0.8396 0.0 sc
169.608902 442.369598 29.148392 4.083008 rectfill

n
0.0242 0.0727 0.8078 0.0 sc
169.608902 446.452606 29.148392 4.083496 rectfill

n
0.0231 0.0694 0.7711 0.0 sc
169.608902 450.536102 29.148392 4.083496 rectfill

n
0.0219 0.0656 0.729 0.0 sc
169.608902 454.619598 29.148392 4.083496 rectfill

n
0.0204 0.0613 0.681 0.0 sc
169.608902 458.703094 29.148392 4.083008 rectfill

n
0.0188 0.0564 0.6264 0.0 sc
169.608902 462.786102 29.148392 4.083496 rectfill

n
0.0169 0.0508 0.5646 0.0 sc
169.608902 466.869598 29.148392 4.083496 rectfill

n
0.0148 0.0445 0.4948 0.0 sc
169.608902 470.953094 29.148392 4.083496 rectfill

n
0.0125 0.0375 0.4164 0.0 sc
169.608902 475.036591 29.148392 4.083496 rectfill

n
0.0099 0.0296 0.3286 0.0 sc
169.608902 479.120087 29.148392 4.083008 rectfill

n
0.0069 0.0207 0.2305 0.0 sc
169.608902 483.203094 29.148392 4.083496 rectfill

n
0.0036 0.0109 0.1213 0.0 sc
169.608902 487.286591 29.148392 4.083496 rectfill

n
0.0 0.0 0.0 0.0 sc
169.608902 491.370087 29.148392 3.083527 rectfill

Q
q
n
172.335 490.774 m
172.421 488.405 l
174.587 432.207 l
174.726 428.684 l
174.726 428.603 l
174.916 425.14 l
175.106 421.597 l
175.279 418.072 l
175.434 414.528 l
175.607 410.985 l
175.763 407.462 l
175.919 403.918 l
175.971 402.52 l
176.109 400.396 l
176.317 396.852 l
176.507 393.309 l
176.697 389.785 l
176.87 386.241 l
177.044 382.697 l
177.216 379.174 l
177.216 378.87 l
177.441 375.63 l
177.666 372.087 l
177.874 368.562 l
178.064 365.019 l
178.254 361.476 l
178.427 357.952 l
178.479 356.96 l
178.652 354.409 l
178.894 350.865 l
179.119 347.342 l
179.326 343.799 l
179.534 340.255 l
179.706 336.729 l
179.724 336.527 l
179.983 333.186 l
180.243 329.643 l
180.485 326.119 l
180.693 322.576 l
180.9 319.032 l
180.969 317.696 l
181.177 315.508 l
181.471 311.965 l
188.071 164.52 l
193.883 169.363 l
186.366 311.965 l
186.314 315.508 l
186.262 319.032 l
186.193 322.576 l
186.124 326.119 l
186.054 329.643 l
185.985 333.186 l
185.968 333.471 l
185.881 336.729 l
185.76 340.255 l
185.657 343.799 l
185.536 347.342 l
185.432 350.865 l
185.311 354.409 l
185.206 357.952 l
185.085 361.476 l
184.965 365.019 l
184.844 368.562 l
184.723 372.087 l
184.723 372.208 l
184.567 375.63 l
184.412 379.174 l
184.255 382.697 l
184.118 386.241 l
183.962 389.785 l
183.806 393.309 l
183.65 396.852 l
183.494 400.396 l
183.477 401.002 l
183.321 403.918 l
183.114 407.462 l
182.941 410.985 l
182.751 414.528 l
182.56 418.072 l
182.388 421.597 l
182.232 424.593 l
182.197 425.14 l
181.955 428.684 l
181.73 432.207 l
181.505 435.75 l
178.08 490.933 l
172.456 490.422 l
W
n
n
[/DeviceCMYK] cs 0.0 0.18 0.33 0.0 sc
171.334503 163.787094 23.548798 6.267609 rectfill

n
0.0047 0.1893 0.3647 0.0 sc
171.334503 170.054703 23.548798 6.267593 rectfill

n
0.0093 0.1985 0.399 0.0 sc
171.334503 176.322296 23.548798 6.267502 rectfill

n
0.0138 0.2076 0.4327 0.0 sc
171.334503 182.589798 23.548798 6.267609 rectfill

n
0.0182 0.2165 0.4659 0.0 sc
171.334503 188.857407 23.548798 6.266586 rectfill

n
0.0226 0.2253 0.4986 0.0 sc
171.334503 195.123993 23.548798 6.267609 rectfill

n
0.0269 0.2339 0.5307 0.0 sc
171.334503 201.391602 23.548798 6.267593 rectfill

n
0.0312 0.2424 0.5622 0.0 sc
171.334503 207.659195 23.548798 6.267609 rectfill

n
0.0354 0.2507 0.5932 0.0 sc
171.334503 213.926804 23.548798 6.267502 rectfill

n
0.0394 0.2589 0.6236 0.0 sc
171.334503 220.194305 23.548798 6.267593 rectfill

n
0.0434 0.2668 0.6533 0.0 sc
171.334503 226.461899 23.548798 6.267609 rectfill

n
0.0473 0.2747 0.6824 0.0 sc
171.334503 232.729507 23.548798 6.267593 rectfill

n
0.0511 0.2823 0.7107 0.0 sc
171.334503 238.997101 23.548798 6.267502 rectfill

n
0.0549 0.2897 0.7384 0.0 sc
171.334503 245.264603 23.548798 6.267593 rectfill

n
0.0585 0.297 0.7653 0.0 sc
171.334503 251.532196 23.548798 6.266602 rectfill

n
0.062 0.304 0.7915 0.0 sc
171.334503 257.798798 23.548798 6.267609 rectfill

n
0.0654 0.3108 0.8168 0.0 sc
171.334503 264.066406 23.548798 6.267609 rectfill

n
0.0687 0.3173 0.8412 0.0 sc
171.334503 270.334015 23.548798 6.267578 rectfill

n
0.0718 0.3236 0.8646 0.0 sc
171.334503 276.601593 23.548798 6.267517 rectfill

n
0.0748 0.3297 0.8871 0.0 sc
171.334503 282.869110 23.548798 6.267578 rectfill

n
0.0777 0.3354 0.9084 0.0 sc
171.334503 289.136688 23.548798 6.267609 rectfill

n
0.0804 0.3408 0.9285 0.0 sc
171.334503 295.404297 23.548798 6.267609 rectfill

n
0.0829 0.3458 0.9471 0.0 sc
171.334503 301.671906 23.548798 6.267609 rectfill

n
0.0852 0.3504 0.9642 0.0 sc
171.334503 307.939514 23.548798 6.266571 rectfill

n
0.0872 0.3544 0.9794 0.0 sc
171.334503 314.206085 23.548798 6.267517 rectfill

n
0.0889 0.3578 0.9919 0.0 sc
171.334503 320.473602 23.548798 6.267609 rectfill

n
0.09 0.36 1.0 0.0 sc
171.334503 326.741211 23.548798 6.267578 rectfill

n
171.334503 333.008789 23.548798 3.998016 rectfill

n
171.334503 337.006805 23.548798 3.998108 rectfill

n
171.334503 341.004913 23.548798 3.997986 rectfill

n
171.334503 345.002899 23.548798 3.998108 rectfill

n
171.334503 349.001007 23.548798 3.997986 rectfill

n
171.334503 352.998993 23.548798 3.998108 rectfill

n
0.09 0.36 0.9999 0.0 sc
171.334503 356.997101 23.548798 3.997986 rectfill

n
0.09 0.3599 0.9998 0.0 sc
171.334503 360.995087 23.548798 3.998108 rectfill

n
0.09 0.3599 0.9996 0.0 sc
171.334503 364.993195 23.548798 3.998993 rectfill

n
0.0899 0.3597 0.9993 0.0 sc
171.334503 368.992188 23.548798 3.998016 rectfill

n
0.0899 0.3596 0.9989 0.0 sc
171.334503 372.990204 23.548798 3.998108 rectfill

n
0.0898 0.3593 0.9982 0.0 sc
171.334503 376.988312 23.548798 3.997986 rectfill

n
0.0897 0.359 0.9972 0.0 sc
171.334503 380.986298 23.548798 3.998108 rectfill

n
0.0896 0.3585 0.9958 0.0 sc
171.334503 384.984406 23.548798 3.997986 rectfill

n
0.0894 0.3578 0.9939 0.0 sc
171.334503 388.982391 23.548798 3.998108 rectfill

n
0.0892 0.3569 0.9914 0.0 sc
171.334503 392.980499 23.548798 3.997986 rectfill

n
0.0889 0.3557 0.9881 0.0 sc
171.334503 396.978485 23.548798 3.998108 rectfill

n
0.0885 0.3542 0.984 0.0 sc
171.334503 400.976593 23.548798 3.998016 rectfill

n
0.0881 0.3523 0.9787 0.0 sc
171.334503 404.974609 23.548798 3.998077 rectfill

n
0.0875 0.3499 0.9721 0.0 sc
171.334503 408.972687 23.548798 3.998016 rectfill

n
0.0867 0.347 0.964 0.0 sc
171.334503 412.970703 23.548798 3.998108 rectfill

n
0.0859 0.3435 0.9541 0.0 sc
171.334503 416.968811 23.548798 3.998474 rectfill

n
0.0848 0.3392 0.9421 0.0 sc
171.334503 420.967285 23.548798 3.998016 rectfill

n
0.0835 0.334 0.9278 0.0 sc
171.334503 424.965302 23.548798 3.998108 rectfill

n
0.082 0.3279 0.9108 0.0 sc
171.334503 428.963409 23.548798 3.997986 rectfill

n
0.0802 0.3206 0.8907 0.0 sc
171.334503 432.961395 23.548798 3.998108 rectfill

n
0.078 0.3121 0.8671 0.0 sc
171.334503 436.959503 23.548798 3.997986 rectfill

n
0.0756 0.3023 0.8396 0.0 sc
171.334503 440.957489 23.548798 3.998108 rectfill

n
0.0727 0.2908 0.8078 0.0 sc
171.334503 444.955597 23.548798 3.998016 rectfill

n
0.0694 0.2776 0.7711 0.0 sc
171.334503 448.953613 23.548798 3.998077 rectfill

n
0.0656 0.2625 0.729 0.0 sc
171.334503 452.951691 23.548798 3.998505 rectfill

n
0.0613 0.2452 0.681 0.0 sc
171.334503 456.950195 23.548798 3.998016 rectfill

n
0.0564 0.2255 0.6264 0.0 sc
171.334503 460.948212 23.548798 3.998077 rectfill

n
0.0508 0.2032 0.5646 0.0 sc
171.334503 464.946289 23.548798 3.998016 rectfill

n
0.0445 0.1781 0.4948 0.0 sc
171.334503 468.944305 23.548798 3.998108 rectfill

n
0.0375 0.1499 0.4164 0.0 sc
171.334503 472.942413 23.548798 3.997986 rectfill

n
0.0296 0.1183 0.3286 0.0 sc
171.334503 476.940399 23.548798 3.998108 rectfill

n
0.0207 0.083 0.2305 0.0 sc
171.334503 480.938507 23.548798 3.997986 rectfill

n
0.0109 0.0437 0.1213 0.0 sc
171.334503 484.936493 23.548798 3.998596 rectfill

n
0.0 0.0 0.0 0.0 sc
171.334503 488.935089 23.548798 2.998016 rectfill

Q
q
n
181.988 492.597 m
181.988 491.441 179.302 490.504 175.988 490.504 c
172.674 490.504 169.988 491.441 169.988 492.597 c
169.988 493.753 172.674 494.69 175.988 494.69 c
179.302 494.69 181.988 493.753 181.988 492.597 c
h
W
n
n
[/DeviceCMYK] cs 0.0028 0.125 0.2334 0.0 sc
169.099594 490.492188 13.777802 0.278809 rectfill

n
0.005 0.105 0.18 0.0 sc
169.099594 490.770996 13.777802 0.279297 rectfill

n
0.0067 0.0894 0.1384 0.0 sc
169.099594 491.050293 13.777802 0.278809 rectfill

n
0.008 0.0778 0.1074 0.0 sc
169.099594 491.329102 13.777802 0.278809 rectfill

n
0.0089 0.0696 0.0856 0.0 sc
169.099594 491.607910 13.777802 0.278778 rectfill

n
0.0095 0.0643 0.0716 0.0 sc
169.099594 491.886688 13.777802 0.278809 rectfill

n
0.0098 0.0614 0.0638 0.0 sc
169.099594 492.165497 13.777802 0.279297 rectfill

n
0.01 0.0602 0.0605 0.0 sc
169.099594 492.444794 13.777802 0.278809 rectfill

n
0.01 0.06 0.06 0.0 sc
169.099594 492.723602 13.777802 0.278809 rectfill

n
169.099594 493.002411 13.777802 1.317902 rectfill

n
0.0 0.0 0.0 0.0 sc
169.099594 494.320312 13.777802 1.317902 rectfill

Q
n
143.376 308.384 m
143.907 308.999 l
145.127 310.332 l
145.968 311.28 l
146.861 312.288 l
148.03 313.69 l
148.542 314.246 l
150.09 316.067 l
150.192 316.196 l
151.892 318.152 l
152.152 318.463 l
153.627 320.108 l
154.21 320.809 l
155.344 322.065 l
156.27 323.216 l
156.976 324.016 l
158.333 325.58 l
158.676 325.973 l
160.274 327.924 l
160.391 328.055 l
162.006 329.877 l
162.455 330.429 l
163.69 331.832 l
164.515 332.842 l
165.323 333.787 l
166.577 335.319 l
166.936 335.743 l
168.548 337.694 l
168.636 337.795 l
170.216 339.652 l
170.695 340.255 l
171.881 341.605 l
172.759 342.712 l
173.48 343.556 l
174.818 345.155 l
175.111 345.515 l
176.657 347.466 l
176.879 347.727 l
178.32 349.421 l
178.941 350.205 l
179.918 351.377 l
180.999 352.759 l
181.499 353.33 l
183.028 355.285 l
183.061 355.316 l
184.675 357.24 l
185.123 357.824 l
186.289 359.194 l
187.182 360.365 l
187.853 361.146 l
189.244 362.842 l
189.448 363.103 l
190.979 365.055 l
191.304 365.478 l
192.591 367.011 l
193.364 368.037 l
194.137 368.965 l
195.425 370.607 l
195.665 370.921 l
197.175 372.872 l
197.488 373.279 l
198.758 374.828 l
199.548 375.921 l
200.251 376.782 l
201.607 378.525 l
201.762 378.735 l
203.291 380.69 l
203.67 381.196 l
204.837 382.644 l
205.728 383.914 l
206.278 384.6 l
207.755 386.553 l
207.789 386.603 l
209.317 388.508 l
209.851 389.24 l
210.848 390.463 l
211.912 391.959 l
212.255 392.415 l
213.715 394.371 l
213.973 394.713 l
215.279 396.322 l
216.033 397.401 l
216.737 398.28 l
218.095 400.216 l
218.112 400.232 l
219.621 402.19 l
220.155 402.937 l
221.119 404.144 l
222.213 405.706 l
222.507 406.098 l
223.966 408.052 l
224.277 408.491 l
225.411 410.006 l
226.336 411.373 l
226.783 411.961 l
228.174 413.912 l
228.397 414.225 l
229.686 415.868 l
230.458 417.056 l
231.043 417.823 l
232.364 419.776 l
232.517 419.988 l
233.911 421.732 l
234.581 422.774 l
235.231 423.688 l
236.554 425.64 l
236.642 425.77 l
238.048 427.595 l
238.7 428.653 l
239.336 429.549 l
240.624 431.501 l
240.761 431.697 l
242.101 433.458 l
242.822 434.629 l
243.371 435.414 l
244.677 437.368 l
244.884 437.676 l
246.084 439.32 l
246.944 440.706 l
247.357 441.274 l
248.713 443.23 l
249.006 443.703 l
250.07 445.182 l
251.067 446.781 l
251.305 447.137 l
252.594 449.093 l
253.126 449.939 l
253.935 451.046 l
255.081 453.001 l
255.187 453.164 l
256.458 454.957 l
257.248 456.339 l
257.643 456.911 l
258.899 458.863 l
259.308 459.546 l
260.22 460.817 l
261.316 462.772 l
261.369 462.853 l
262.657 464.725 l
263.429 466.111 l
263.793 466.682 l
265.027 468.637 l
265.491 469.432 l
266.264 470.589 l
267.328 472.544 l
267.551 472.919 l
268.633 474.498 l
269.612 476.389 l
269.665 476.454 l
270.919 478.406 l
271.675 479.84 l
271.982 480.361 l
273.148 482.315 l
273.733 483.489 l
274.197 484.27 l
275.332 486.225 l
275.795 487.155 l
276.411 488.179 l
277.494 490.131 l
277.853 490.848 l
278.611 492.087 l
279.606 494.041 l
279.915 494.66 l
280.705 495.994 l
281.651 497.948 l
281.977 498.634 l
282.682 499.906 l
283.626 501.86 l
284.038 502.819 l
284.57 503.812 l
285.566 505.767 l
286.099 507.039 l
286.457 507.722 l
287.455 509.677 l
288.16 511.484 l
288.227 511.629 l
289.187 513.584 l
289.962 515.539 l
290.219 516.256 l
290.803 517.493 l
291.662 519.445 l
292.279 521.255 l
292.331 521.401 l
293.19 523.356 l
293.828 525.31 l
294.339 526.727 l
294.565 527.262 l
295.233 529.218 l
295.783 531.172 l
296.283 533.128 l
296.404 533.648 l
296.85 535.082 l
297.344 537.037 l
297.74 538.991 l
298.1 540.943 l
298.291 542.901 l
298.462 544.609 l
298.498 544.853 l
298.685 546.807 l
298.634 548.763 l
298.462 550.18 l
298.412 550.717 l
298.032 552.672 l
297.379 554.624 l
296.404 556.58 l
296.404 556.58 l
294.702 558.534 l
294.339 558.827 l
292.279 559.87 l
290.219 560.356 l
288.16 560.455 l
286.099 560.276 l
284.038 559.951 l
281.977 559.416 l
279.915 558.648 l
279.677 558.534 l
277.853 557.817 l
275.795 556.825 l
275.383 556.58 l
273.733 555.716 l
272.015 554.624 l
271.675 554.447 l
269.612 553.142 l
268.944 552.672 l
267.551 551.809 l
266.093 550.717 l
265.491 550.294 l
263.499 548.763 l
263.429 548.712 l
261.369 547.085 l
261.045 546.807 l
259.308 545.373 l
258.707 544.853 l
257.248 543.632 l
256.406 542.901 l
255.187 541.808 l
254.258 540.943 l
253.126 539.918 l
252.148 538.991 l
251.067 537.966 l
250.138 537.037 l
249.006 535.91 l
248.183 535.082 l
246.944 533.843 l
246.256 533.128 l
244.884 531.678 l
244.386 531.172 l
242.822 529.514 l
242.548 529.218 l
240.761 527.262 l
240.761 527.262 l
238.942 525.31 l
238.7 525.05 l
237.138 523.356 l
236.642 522.787 l
235.352 521.401 l
234.581 520.488 l
233.668 519.445 l
232.517 518.078 l
231.985 517.493 l
230.458 515.604 l
230.407 515.539 l
228.706 513.584 l
228.397 513.208 l
226.991 511.629 l
226.336 510.833 l
225.358 509.677 l
224.277 508.291 l
223.778 507.722 l
222.269 505.767 l
222.213 505.703 l
220.602 503.812 l
220.155 503.244 l
218.971 501.86 l
218.095 500.704 l
217.407 499.906 l
216.033 498.113 l
215.895 497.948 l
214.314 495.994 l
213.973 495.525 l
212.736 494.041 l
211.912 492.901 l
211.226 492.087 l
209.851 490.232 l
209.765 490.131 l
208.185 488.179 l
207.789 487.64 l
206.623 486.225 l
205.728 484.969 l
205.146 484.27 l
203.738 482.315 l
203.67 482.217 l
202.123 480.361 l
201.607 479.66 l
200.594 478.406 l
199.548 476.876 l
199.204 476.454 l
197.71 474.498 l
197.488 474.189 l
196.131 472.544 l
195.425 471.533 l
194.654 470.589 l
193.364 468.797 l
193.246 468.637 l
191.732 466.682 l
191.304 466.078 l
190.224 464.725 l
189.244 463.327 l
188.798 462.772 l
187.372 460.817 l
187.182 460.558 l
185.827 458.863 l
185.123 457.852 l
184.367 456.911 l
183.061 454.986 l
183.044 454.957 l
181.483 453.001 l
180.999 452.301 l
179.986 451.046 l
178.941 449.467 l
178.632 449.093 l
177.17 447.137 l
176.879 446.714 l
175.66 445.182 l
174.818 443.945 l
174.234 443.23 l
172.876 441.274 l
172.759 441.096 l
171.317 439.32 l
170.695 438.407 l
169.89 437.368 l
168.636 435.559 l
168.514 435.414 l
167.038 433.458 l
166.577 432.773 l
165.579 431.501 l
164.515 429.907 l
164.223 429.549 l
162.762 427.595 l
162.455 427.137 l
161.286 425.64 l
160.391 424.32 l
159.878 423.688 l
158.504 421.732 l
158.333 421.472 l
156.993 419.776 l
156.27 418.685 l
155.602 417.823 l
154.299 415.868 l
154.21 415.738 l
152.751 413.912 l
152.152 413.034 l
151.326 411.961 l
150.09 410.139 l
149.986 410.006 l
148.526 408.052 l
148.03 407.335 l
147.083 406.098 l
145.968 404.42 l
145.747 404.144 l
144.303 402.19 l
143.907 401.619 l
142.843 400.232 l
142.843 400.232 l
140.816 398.28 l
140.816 396.322 l
140.816 394.371 l
140.816 392.415 l
140.816 390.463 l
140.816 388.508 l
140.816 386.553 l
140.816 384.6 l
140.816 382.644 l
140.816 380.69 l
140.816 378.735 l
140.816 376.782 l
140.816 374.828 l
140.816 372.872 l
140.816 370.921 l
140.816 368.965 l
140.816 367.011 l
140.816 365.055 l
140.816 363.103 l
140.816 361.146 l
140.816 359.194 l
140.816 357.24 l
140.816 355.285 l
140.816 353.33 l
140.816 351.377 l
140.816 349.421 l
140.816 347.466 l
140.816 345.515 l
140.816 343.556 l
140.816 341.605 l
140.816 339.652 l
140.816 337.694 l
140.816 335.743 l
140.816 333.787 l
140.816 331.832 l
140.816 329.877 l
140.816 327.924 l
140.816 325.973 l
140.816 324.016 l
140.816 322.065 l
140.816 320.108 l
140.816 318.152 l
140.816 316.196 l
140.816 314.246 l
140.816 312.288 l
143.376 308.384 l
h
n
n
141.847 322.065 m
143.648 324.016 l
143.907 324.309 l
145.503 325.973 l
145.968 326.474 l
147.24 327.924 l
148.03 328.755 l
149.092 329.877 l
150.09 331.019 l
150.794 331.832 l
152.152 333.33 l
152.561 333.787 l
154.21 335.614 l
154.331 335.743 l
156.1 337.694 l
156.27 337.894 l
157.834 339.652 l
158.333 340.221 l
159.552 341.605 l
160.391 342.533 l
161.303 343.556 l
162.455 344.946 l
162.952 345.515 l
164.515 347.256 l
164.702 347.466 l
166.386 349.421 l
166.577 349.631 l
168.087 351.377 l
168.636 352.043 l
169.787 353.33 l
170.695 354.392 l
171.471 355.285 l
172.759 356.882 l
173.067 357.24 l
174.784 359.194 l
174.818 359.241 l
176.397 361.146 l
176.879 361.736 l
178.083 363.103 l
178.941 364.126 l
179.711 365.055 l
180.999 366.683 l
181.274 367.011 l
182.942 368.965 l
183.061 369.108 l
184.555 370.921 l
185.123 371.637 l
186.169 372.872 l
187.182 374.142 l
187.749 374.828 l
189.244 376.667 l
189.328 376.782 l
190.994 378.735 l
191.304 379.144 l
192.523 380.69 l
193.364 381.714 l
194.121 382.644 l
195.425 384.338 l
195.648 384.6 l
197.23 386.553 l
197.488 386.898 l
198.775 388.508 l
199.548 389.487 l
200.319 390.463 l
201.607 392.139 l
201.831 392.415 l
203.411 394.371 l
203.67 394.732 l
204.903 396.322 l
205.728 397.381 l
206.432 398.28 l
207.789 400.137 l
207.874 400.232 l
209.369 402.19 l
209.851 402.84 l
210.881 404.144 l
211.912 405.562 l
212.341 406.098 l
213.835 408.052 l
213.973 408.231 l
215.345 410.006 l
216.033 410.935 l
216.824 411.961 l
218.095 413.754 l
218.212 413.912 l
219.674 415.868 l
220.155 416.552 l
221.119 417.823 l
222.213 419.368 l
222.525 419.776 l
224.019 421.732 l
224.277 422.105 l
225.392 423.688 l
226.336 425.054 l
226.783 425.64 l
228.208 427.595 l
228.397 427.871 l
229.6 429.549 l
230.458 430.835 l
230.958 431.501 l
232.348 433.458 l
232.517 433.719 l
233.739 435.414 l
234.581 436.716 l
235.06 437.368 l
236.434 439.32 l
236.642 439.648 l
237.756 441.274 l
238.7 442.758 l
239.044 443.23 l
240.383 445.182 l
240.761 445.77 l
241.725 447.137 l
242.822 448.832 l
243.015 449.093 l
244.317 451.046 l
244.884 451.926 l
245.639 453.001 l
246.876 454.957 l
246.944 455.068 l
248.165 456.911 l
249.006 458.342 l
249.348 458.863 l
250.619 460.817 l
251.067 461.568 l
251.891 462.772 l
253.076 464.725 l
253.126 464.807 l
254.295 466.682 l
255.187 468.228 l
255.462 468.637 l
256.665 470.589 l
257.248 471.6 l
257.866 472.544 l
259.052 474.498 l
259.308 474.987 l
260.167 476.454 l
261.266 478.406 l
261.369 478.618 l
262.383 480.361 l
263.429 482.267 l
263.463 482.315 l
264.581 484.27 l
265.491 485.962 l
265.646 486.225 l
266.761 488.179 l
267.551 489.824 l
267.722 490.131 l
268.823 492.087 l
269.612 493.78 l
269.75 494.041 l
270.763 495.994 l
271.675 497.918 l
271.69 497.948 l
272.652 499.906 l
273.561 501.86 l
273.733 502.232 l
274.509 503.812 l
275.332 505.767 l
275.795 506.939 l
276.156 507.722 l
276.997 509.677 l
277.788 511.629 l
277.853 511.825 l
278.525 513.584 l
279.246 515.539 l
279.915 517.493 l
279.915 517.508 l
280.536 519.445 l
281.119 521.401 l
281.685 523.356 l
281.977 524.742 l
282.114 525.31 l
282.458 527.262 l
282.783 529.218 l
283.022 531.172 l
283.095 533.128 l
282.989 535.082 l
282.699 537.037 l
282.114 538.991 l
281.977 539.3 l
280.875 540.943 l
279.915 541.774 l
277.853 542.786 l
276.689 542.901 l
275.795 542.966 l
274.61 542.901 l
273.733 542.851 l
271.675 542.329 l
269.612 541.531 l
268.255 540.943 l
267.551 540.669 l
265.491 539.542 l
264.581 538.991 l
263.429 538.322 l
261.402 537.037 l
261.369 537.019 l
259.308 535.507 l
258.778 535.082 l
257.248 533.989 l
256.185 533.128 l
255.187 532.328 l
253.848 531.172 l
253.126 530.62 l
251.564 529.218 l
251.067 528.781 l
249.399 527.262 l
249.006 526.921 l
247.323 525.31 l
246.944 524.952 l
245.331 523.356 l
244.884 522.917 l
243.355 521.401 l
242.822 520.865 l
241.45 519.445 l
240.761 518.762 l
239.56 517.493 l
238.7 516.55 l
237.756 515.539 l
236.642 514.335 l
235.919 513.584 l
234.581 512.055 l
234.202 511.629 l
232.517 509.725 l
232.484 509.677 l
230.75 507.722 l
230.458 507.397 l
229.001 505.767 l
228.397 505.051 l
227.315 503.812 l
226.336 502.608 l
225.683 501.86 l
224.277 500.115 l
224.102 499.906 l
222.423 497.948 l
222.213 497.689 l
220.806 495.994 l
220.155 495.165 l
219.175 494.041 l
218.095 492.656 l
217.629 492.087 l
216.085 490.131 l
216.033 490.067 l
214.47 488.179 l
213.973 487.51 l
212.924 486.225 l
211.912 484.921 l
211.378 484.27 l
209.901 482.315 l
209.851 482.25 l
208.322 480.361 l
207.789 479.644 l
206.778 478.406 l
205.728 476.958 l
205.316 476.454 l
203.808 474.498 l
203.67 474.302 l
202.279 472.544 l
201.607 471.6 l
200.783 470.589 l
199.548 468.864 l
199.357 468.637 l
197.83 466.682 l
197.488 466.192 l
196.316 464.725 l
195.425 463.472 l
194.857 462.772 l
193.45 460.817 l
193.364 460.69 l
191.94 458.863 l
191.304 457.952 l
190.479 456.911 l
189.244 455.149 l
189.09 454.957 l
187.578 453.001 l
187.182 452.43 l
186.101 451.046 l
185.123 449.629 l
184.709 449.093 l
183.284 447.137 l
183.061 446.827 l
181.791 445.182 l
180.999 444.026 l
180.367 443.23 l
178.989 441.274 l
178.941 441.194 l
177.515 439.32 l
176.879 438.376 l
176.105 437.368 l
174.818 435.526 l
174.732 435.414 l
173.254 433.458 l
172.759 432.725 l
171.813 431.501 l
170.695 429.827 l
170.491 429.549 l
169.049 427.595 l
168.636 426.992 l
167.607 425.64 l
166.577 424.094 l
166.265 423.688 l
164.857 421.732 l
164.515 421.228 l
163.416 419.776 l
162.455 418.343 l
162.06 417.823 l
160.684 415.868 l
160.391 415.445 l
159.24 413.912 l
158.333 412.546 l
157.887 411.961 l
156.529 410.006 l
156.27 409.632 l
155.086 408.052 l
154.21 406.732 l
153.715 406.098 l
152.357 404.144 l
152.152 403.816 l
150.966 402.19 l
150.09 400.871 l
149.608 400.232 l
148.251 398.28 l
148.03 397.939 l
146.861 396.322 l
145.968 394.957 l
145.539 394.371 l
144.197 392.415 l
143.907 391.976 l
142.808 390.463 l
142.808 390.463 l
140.816 388.508 l
140.816 386.553 l
140.816 384.6 l
140.816 382.644 l
140.816 380.69 l
140.816 378.735 l
140.816 376.782 l
140.816 374.828 l
140.816 372.872 l
140.816 370.921 l
140.816 368.965 l
140.816 367.011 l
140.816 365.055 l
140.816 363.103 l
140.816 361.146 l
140.816 359.194 l
140.816 357.24 l
140.816 355.285 l
140.816 353.33 l
140.816 351.377 l
140.816 349.421 l
140.816 347.466 l
140.816 345.515 l
140.816 343.556 l
140.816 341.605 l
140.816 339.652 l
140.816 337.694 l
140.816 335.743 l
140.816 333.787 l
140.816 331.832 l
140.816 329.877 l
140.816 327.924 l
140.816 325.973 l
141.847 322.065 l
h
n
8.0 setflat
0.5 w
4.0 M
n
143.528 331.832 m
143.907 332.225 l
145.435 333.787 l
145.968 334.325 l
147.307 335.743 l
148.03 336.475 l
149.196 337.694 l
150.09 338.624 l
151.068 339.652 l
152.152 340.859 l
152.836 341.605 l
154.21 343.133 l
154.607 343.556 l
156.27 345.43 l
156.356 345.515 l
158.247 347.466 l
158.333 347.564 l
159.999 349.421 l
160.391 349.848 l
161.801 351.377 l
162.455 352.095 l
163.57 353.33 l
164.515 354.371 l
165.323 355.285 l
166.577 356.769 l
167.022 357.24 l
168.636 359.161 l
168.652 359.194 l
170.439 361.146 l
170.695 361.426 l
172.155 363.103 l
172.759 363.785 l
173.874 365.055 l
174.818 366.114 l
175.609 367.011 l
176.879 368.656 l
177.154 368.965 l
178.873 370.921 l
178.941 371.0 l
180.537 372.872 l
180.999 373.41 l
182.204 374.828 l
183.061 375.823 l
183.904 376.782 l
185.123 378.409 l
185.398 378.735 l
187.064 380.69 l
187.182 380.855 l
188.662 382.644 l
189.244 383.342 l
190.291 384.6 l
191.304 385.837 l
191.923 386.553 l
193.364 388.49 l
193.382 388.508 l
195.064 390.463 l
195.425 390.935 l
196.611 392.415 l
197.488 393.458 l
198.26 394.371 l
199.548 396.23 l
199.616 396.322 l
201.282 398.28 l
201.607 398.721 l
202.811 400.232 l
203.67 401.293 l
204.409 402.19 l
205.728 404.095 l
205.762 404.144 l
207.361 406.098 l
207.789 406.668 l
208.872 408.052 l
209.851 409.353 l
210.366 410.006 l
211.809 411.961 l
211.912 412.09 l
213.303 413.912 l
213.973 414.777 l
214.848 415.868 l
216.033 417.627 l
216.17 417.823 l
217.682 419.776 l
218.095 420.33 l
219.158 421.732 l
220.155 423.149 l
220.566 423.688 l
221.976 425.64 l
222.213 425.981 l
223.417 427.595 l
224.277 428.785 l
224.845 429.549 l
226.182 431.501 l
226.336 431.731 l
227.591 433.458 l
228.397 434.582 l
229.017 435.414 l
230.321 437.368 l
230.458 437.578 l
231.694 439.32 l
232.517 440.492 l
233.086 441.274 l
234.372 443.23 l
234.581 443.538 l
235.73 445.182 l
236.642 446.585 l
237.035 447.137 l
238.374 449.093 l
238.7 449.612 l
239.697 451.046 l
240.761 452.89 l
240.83 453.001 l
242.22 454.957 l
242.822 455.885 l
243.545 456.911 l
244.711 458.863 l
244.884 459.141 l
245.965 460.817 l
246.944 462.496 l
247.115 462.772 l
248.42 464.725 l
249.006 465.67 l
249.675 466.682 l
250.79 468.637 l
251.067 469.11 l
252.011 470.589 l
253.093 472.544 l
253.126 472.594 l
254.295 474.498 l
255.187 476.21 l
255.342 476.454 l
256.542 478.406 l
257.248 479.727 l
257.626 480.361 l
258.707 482.315 l
259.308 483.456 l
259.773 484.27 l
260.819 486.225 l
261.369 487.3 l
261.849 488.179 l
262.846 490.131 l
263.429 491.339 l
263.826 492.087 l
264.789 494.041 l
265.491 495.655 l
265.662 495.994 l
266.66 497.948 l
267.5 499.906 l
267.551 500.0 l
268.462 501.86 l
269.218 503.812 l
269.612 504.888 l
269.973 505.767 l
270.763 507.722 l
271.467 509.677 l
271.675 510.36 l
272.12 511.629 l
272.772 513.584 l
273.321 515.539 l
273.716 517.493 l
273.733 517.59 l
274.162 519.445 l
274.542 521.401 l
274.763 523.356 l
274.783 525.31 l
274.592 527.262 l
273.992 529.218 l
273.733 529.856 l
272.944 531.172 l
271.675 532.25 l
269.612 532.948 l
267.551 532.869 l
265.491 532.426 l
263.429 531.597 l
262.487 531.172 l
261.369 530.718 l
259.308 529.463 l
258.965 529.218 l
257.248 528.242 l
255.872 527.262 l
255.187 526.792 l
253.263 525.31 l
253.126 525.212 l
251.067 523.47 l
250.929 523.356 l
249.006 521.775 l
248.576 521.401 l
246.944 519.986 l
246.359 519.445 l
244.884 518.095 l
244.266 517.493 l
242.822 516.091 l
242.271 515.539 l
240.761 514.024 l
240.333 513.584 l
238.7 511.842 l
238.511 511.629 l
236.642 509.677 l
236.642 509.677 l
234.768 507.722 l
234.581 507.526 l
232.966 505.767 l
232.517 505.261 l
231.196 503.812 l
230.458 502.966 l
229.462 501.86 l
228.397 500.671 l
227.728 499.906 l
226.336 498.178 l
226.149 497.948 l
224.448 495.994 l
224.277 495.783 l
222.781 494.041 l
222.213 493.341 l
221.15 492.087 l
220.155 490.899 l
219.52 490.131 l
218.095 488.261 l
218.027 488.179 l
216.377 486.225 l
216.033 485.801 l
214.745 484.27 l
213.973 483.259 l
213.217 482.315 l
211.912 480.59 l
211.723 480.361 l
210.144 478.406 l
209.851 478.033 l
208.562 476.454 l
207.789 475.41 l
207.085 474.498 l
205.728 472.659 l
205.643 472.544 l
204.064 470.589 l
203.67 470.067 l
202.52 468.637 l
201.607 467.399 l
201.024 466.682 l
199.616 464.725 l
199.548 464.612 l
198.105 462.772 l
197.488 461.924 l
196.628 460.817 l
195.425 459.141 l
195.203 458.863 l
193.708 456.911 l
193.364 456.421 l
192.217 454.957 l
191.304 453.684 l
190.771 453.001 l
189.399 451.046 l
189.244 450.817 l
187.903 449.093 l
187.182 448.066 l
186.476 447.137 l
185.139 445.182 l
185.123 445.168 l
183.61 443.23 l
183.061 442.415 l
182.204 441.274 l
180.999 439.499 l
180.862 439.32 l
179.387 437.368 l
178.941 436.699 l
177.962 435.414 l
176.879 433.864 l
176.571 433.458 l
175.162 431.501 l
174.818 430.982 l
173.755 429.549 l
172.759 428.115 l
172.38 427.595 l
170.987 425.64 l
170.695 425.202 l
169.564 423.688 l
168.636 422.35 l
168.19 421.732 l
166.831 419.776 l
166.577 419.368 l
165.425 417.823 l
164.515 416.486 l
164.05 415.868 l
162.712 413.912 l
162.455 413.49 l
161.338 411.961 l
160.391 410.561 l
159.98 410.006 l
158.642 408.052 l
158.333 407.578 l
157.269 406.098 l
156.27 404.616 l
155.929 404.144 l
154.59 402.19 l
154.21 401.619 l
153.198 400.232 l
152.152 398.574 l
151.942 398.28 l
150.571 396.322 l
150.09 395.608 l
149.213 394.371 l
148.03 392.467 l
147.996 392.415 l
146.586 390.463 l
145.968 389.519 l
145.229 388.508 l
143.976 386.553 l
143.907 386.439 l
142.652 384.6 l
142.652 384.6 l
140.816 382.644 l
140.816 380.69 l
140.816 378.735 l
140.816 376.782 l
140.816 374.828 l
140.816 372.872 l
140.816 370.921 l
140.816 368.965 l
140.816 367.011 l
140.816 365.055 l
140.816 363.103 l
140.816 361.146 l
140.816 359.194 l
140.816 357.24 l
140.816 355.285 l
140.816 353.33 l
140.816 351.377 l
140.816 349.421 l
140.816 347.466 l
140.816 345.515 l
140.816 343.556 l
140.816 341.605 l
140.816 339.652 l
140.816 337.694 l
140.816 335.743 l
143.528 331.832 l
h
[/DeviceCMYK] cs 0.23 0.0 0.0 0.0 sc
q
f
Q
0.24 0.09 0.0 0.0 sc
S
2.0 w
n
143.907 351.327 m
143.976 351.377 l
145.968 352.81 l
146.653 353.33 l
148.03 354.242 l
149.335 355.285 l
150.09 355.92 l
151.669 357.24 l
152.152 357.595 l
154.007 359.194 l
154.21 359.355 l
156.187 361.146 l
156.27 361.214 l
158.333 363.084 l
158.349 363.103 l
160.391 365.055 l
160.391 365.055 l
162.352 367.011 l
162.455 367.107 l
164.327 368.965 l
164.515 369.145 l
166.265 370.921 l
166.577 371.227 l
168.174 372.872 l
168.636 373.363 l
170.029 374.828 l
170.695 375.531 l
171.847 376.782 l
172.759 377.774 l
173.667 378.735 l
174.818 379.926 l
175.522 380.69 l
176.879 382.173 l
177.293 382.644 l
178.941 384.403 l
179.11 384.6 l
180.829 386.553 l
180.999 386.749 l
182.547 388.508 l
183.061 389.11 l
184.245 390.463 l
185.123 391.505 l
185.931 392.415 l
187.182 393.818 l
187.647 394.371 l
189.244 396.26 l
189.312 396.322 l
190.945 398.28 l
191.304 398.704 l
192.609 400.232 l
193.364 401.226 l
194.171 402.19 l
195.425 403.671 l
195.821 404.144 l
197.384 406.098 l
197.488 406.211 l
199.015 408.052 l
199.548 408.77 l
200.577 410.006 l
201.607 411.309 l
202.123 411.961 l
203.634 413.912 l
203.67 413.964 l
205.197 415.868 l
205.728 416.586 l
206.708 417.823 l
207.789 419.24 l
208.221 419.776 l
209.697 421.732 l
209.851 421.941 l
211.226 423.688 l
211.912 424.663 l
212.667 425.64 l
213.973 427.368 l
214.145 427.595 l
215.587 429.549 l
216.033 430.185 l
217.029 431.501 l
218.095 433.019 l
218.42 433.458 l
219.829 435.414 l
220.155 435.868 l
221.288 437.368 l
222.213 438.766 l
222.628 439.32 l
223.986 441.274 l
224.277 441.698 l
225.392 443.23 l
226.336 444.664 l
226.7 445.182 l
228.02 447.137 l
228.397 447.726 l
229.356 449.093 l
230.458 450.786 l
230.646 451.046 l
231.934 453.001 l
232.517 453.977 l
233.189 454.957 l
234.444 456.911 l
234.581 457.137 l
235.765 458.863 l
236.642 460.442 l
236.898 460.817 l
238.136 462.772 l
238.7 463.815 l
239.284 464.725 l
240.487 466.682 l
240.761 467.203 l
241.638 468.637 l
242.755 470.589 l
242.822 470.704 l
243.921 472.544 l
244.884 474.269 l
245.02 474.498 l
246.084 476.454 l
246.944 478.131 l
247.098 478.406 l
248.13 480.361 l
249.006 482.153 l
249.089 482.315 l
250.017 484.27 l
250.946 486.225 l
251.067 486.549 l
251.788 488.179 l
252.68 490.131 l
253.126 491.37 l
253.436 492.087 l
254.192 494.041 l
254.913 495.994 l
255.187 497.005 l
255.48 497.948 l
256.011 499.906 l
256.389 501.86 l
256.697 503.812 l
256.716 505.767 l
256.389 507.722 l
255.187 509.61 l
255.034 509.677 l
253.126 510.13 l
251.067 509.888 l
250.636 509.677 l
249.006 508.86 l
246.944 507.868 l
246.739 507.722 l
244.884 506.451 l
244.042 505.767 l
242.822 504.855 l
241.551 503.812 l
240.761 503.227 l
239.217 501.86 l
238.7 501.435 l
237.053 499.906 l
236.642 499.53 l
235.01 497.948 l
234.581 497.543 l
233.035 495.994 l
232.517 495.49 l
231.145 494.041 l
230.458 493.324 l
229.292 492.087 l
228.397 491.109 l
227.504 490.131 l
226.336 488.815 l
225.786 488.179 l
224.277 486.502 l
224.019 486.225 l
222.318 484.27 l
222.213 484.139 l
220.634 482.315 l
220.155 481.761 l
218.934 480.361 l
218.095 479.271 l
217.374 478.406 l
216.033 476.778 l
215.758 476.454 l
214.161 474.498 l
213.973 474.252 l
212.566 472.544 l
211.912 471.729 l
211.002 470.589 l
209.851 469.11 l
209.474 468.637 l
207.943 466.682 l
207.789 466.469 l
206.415 464.725 l
205.728 463.831 l
204.887 462.772 l
203.67 461.095 l
203.445 460.817 l
201.934 458.863 l
201.607 458.406 l
200.439 456.911 l
199.548 455.623 l
199.015 454.957 l
197.572 453.001 l
197.488 452.87 l
196.061 451.046 l
195.425 450.133 l
194.636 449.093 l
193.364 447.299 l
193.246 447.137 l
191.803 445.182 l
191.304 444.467 l
190.36 443.23 l
189.244 441.586 l
189.019 441.274 l
187.611 439.32 l
187.182 438.716 l
186.151 437.368 l
185.123 435.819 l
184.812 435.414 l
183.454 433.458 l
183.061 432.887 l
182.013 431.501 l
180.999 429.94 l
180.707 429.549 l
179.37 427.595 l
178.941 426.975 l
177.962 425.64 l
176.879 423.948 l
176.689 423.688 l
175.315 421.732 l
174.818 420.933 l
173.994 419.776 l
172.759 417.954 l
172.671 417.823 l
171.333 415.868 l
170.695 414.809 l
170.079 413.912 l
168.79 411.961 l
168.636 411.715 l
167.434 410.006 l
166.577 408.605 l
166.18 408.052 l
164.909 406.098 l
164.515 405.431 l
163.657 404.144 l
162.455 402.288 l
162.384 402.19 l
161.097 400.232 l
160.391 399.011 l
159.913 398.28 l
158.693 396.322 l
158.333 395.708 l
157.475 394.371 l
156.27 392.467 l
156.238 392.415 l
155.003 390.463 l
154.21 389.079 l
153.85 388.508 l
152.682 386.553 l
152.152 385.576 l
151.549 384.6 l
150.38 382.644 l
150.09 382.075 l
149.266 380.69 l
148.132 378.735 l
148.03 378.541 l
147.05 376.782 l
145.968 374.908 l
145.916 374.828 l
144.936 372.872 l
143.907 371.067 l
143.822 370.921 l
142.911 368.965 l
141.881 367.011 l
141.881 367.011 l
140.816 365.055 l
140.816 363.103 l
140.816 361.146 l
140.816 359.194 l
140.816 357.24 l
140.816 355.285 l
140.816 353.33 l
140.816 351.377 l
143.907 351.327 l
143.907 351.327 l
h
0.56 0.0 0.0 0.0 sc
q
f
Q
0.36 0.09 0.0 0.0 sc
S
q
n
360.288 255.123 m
305.971 305.387 l
258.438 343.887 l
222.788 372.486 l
205.155 385.521 l
197.712 389.58 l
193.738 394.486 l
189.962 402.08 l
181.771 408.387 l
170.572 414.054 l
167.972 413.736 l
164.905 413.42 l
162.222 413.036 l
160.455 411.587 l
162.605 405.986 l
164.905 403.62 l
174.488 392.42 l
190.711 375.224 l
202.13 361.321 l
236.962 329.05 l
290.279 277.05 l
338.988 226.366 l
381.114 179.632 l
405.174 152.989 l
425.681 135.521 l
475.807 154.509 l
360.288 255.123 l
h
W
n
n
175.737 415.054 m
181.435 411.064 l
159.455 379.674 l
159.455 413.645 l
160.441 415.054 l
175.737 415.054 l
h
0.21 0.0 0.3 0.0 sc
eofill
n
181.435 411.064 m
197.397 399.887 l
159.455 345.7 l
159.455 379.674 l
181.435 411.064 l
h
0.2084 0.0 0.2977 0.0 sc
eofill
n
197.397 399.887 m
213.358 388.711 l
163.103 316.939 l
159.455 319.493 l
159.455 345.7 l
197.397 399.887 l
h
0.2033 0.0 0.2905 0.0 sc
eofill
n
213.358 388.711 m
229.32 377.534 l
179.064 305.763 l
163.103 316.939 l
213.358 388.711 l
h
0.1949 0.0 0.2784 0.0 sc
eofill
n
229.32 377.534 m
245.282 366.358 l
195.026 294.586 l
179.064 305.763 l
229.32 377.534 l
h
0.1829 0.0 0.2613 0.0 sc
eofill
n
245.282 366.358 m
261.243 355.182 l
210.988 283.409 l
195.026 294.586 l
245.282 366.358 l
h
0.1674 0.0 0.2392 0.0 sc
eofill
n
261.243 355.182 m
277.205 344.005 l
226.949 272.233 l
210.988 283.409 l
261.243 355.182 l
h
0.1484 0.0 0.212 0.0 sc
eofill
n
277.205 344.005 m
293.167 332.829 l
242.911 261.057 l
226.949 272.233 l
277.205 344.005 l
h
0.1259 0.0 0.1798 0.0 sc
eofill
n
293.167 332.829 m
309.128 321.652 l
258.873 249.88 l
242.911 261.057 l
293.167 332.829 l
h
0.0998 0.0 0.1425 0.0 sc
eofill
n
309.128 321.652 m
325.09 310.476 l
274.834 238.704 l
258.873 249.88 l
309.128 321.652 l
h
0.0701 0.0 0.1001 0.0 sc
eofill
n
325.09 310.476 m
341.051 299.3 l
290.796 227.527 l
274.834 238.704 l
325.09 310.476 l
h
0.0368 0.0 0.0526 0.0 sc
eofill
n
341.051 299.3 m
357.013 288.123 l
306.757 216.351 l
290.796 227.527 l
341.051 299.3 l
h
0.0 0.0 0.0 0.0 sc
eofill
n
357.013 288.123 m
476.807 204.242 l
476.807 152.449 l
464.253 134.521 l
423.621 134.521 l
306.757 216.351 l
357.013 288.123 l
h
eofill
n
464.253 134.521 m
476.807 152.449 l
476.807 152.448 l
464.254 134.521 l
464.253 134.521 l
h
eofill
n
464.253 134.521 m
476.807 152.449 l
476.807 152.448 l
464.254 134.521 l
464.253 134.521 l
h
eofill
n
464.254 134.521 m
476.807 152.448 l
476.807 134.521 l
464.254 134.521 l
h
eofill
Q
n
141.287 435.28 m
142.534 440.517 l
143.78 444.891 l
145.001 448.735 l
146.248 452.182 l
147.469 455.43 l
148.715 458.478 l
149.961 461.395 l
151.183 464.179 l
152.429 466.896 l
153.675 469.481 l
154.896 472.0 l
156.143 474.452 l
157.389 476.772 l
158.61 479.092 l
159.857 481.345 l
161.103 483.599 l
162.324 485.786 l
163.57 487.907 l
164.817 490.028 l
166.038 492.082 l
167.285 494.071 l
168.506 496.125 l
169.752 498.048 l
170.999 500.036 l
172.22 501.958 l
173.466 503.814 l
174.713 505.736 l
175.934 507.592 l
177.18 509.381 l
178.426 511.237 l
179.648 513.027 l
180.894 514.816 l
182.141 516.54 l
183.362 518.263 l
184.608 520.053 l
185.855 521.71 l
187.076 523.433 l
188.322 525.156 l
189.543 526.813 l
190.79 528.47 l
192.036 530.127 l
193.257 531.784 l
194.503 533.375 l
195.75 534.966 l
196.971 536.623 l
198.217 538.213 l
199.464 539.804 l
200.685 541.329 l
201.931 542.919 l
203.178 544.444 l
204.399 546.034 l
205.645 547.559 l
206.892 549.083 l
208.113 550.607 l
209.359 552.132 l
210.581 553.59 l
211.827 555.115 l
213.073 556.573 l
214.294 558.098 l
215.54 559.556 l
216.787 561.014 l
218.008 562.472 l
219.254 563.93 l
220.501 565.388 l
221.722 566.847 l
222.969 568.238 l
224.215 569.697 l
225.436 571.155 l
226.682 572.547 l
227.929 573.938 l
229.15 575.33 l
230.396 576.788 l
231.618 578.18 l
232.864 579.572 l
234.11 580.964 l
235.331 582.29 l
236.578 583.682 l
237.824 585.073 l
239.046 586.399 l
240.292 587.791 l
252.655 601.18 l
265.043 614.17 l
277.406 626.83 l
289.794 639.158 l
302.157 651.287 l
314.545 659.903 l
326.908 659.903 l
339.297 659.903 l
351.66 659.903 l
364.048 659.903 l
376.41 659.903 l
388.799 659.903 l
401.162 659.903 l
413.55 659.903 l
425.913 659.903 l
438.276 659.903 l
450.664 659.903 l
463.027 659.903 l
475.415 659.903 l
487.778 659.903 l
500.166 659.903 l
511.309 659.903 l
511.309 659.903 l
141.287 659.903 l
141.287 435.281 l
141.287 435.28 l
[/DeviceGray] cs 1.0 sc
f
1.0 w
n
512.529 133.574 m
512.529 659.903 l
141.287 659.903 l
141.287 133.574 l
512.529 133.574 l
h
0.0 sc
S
0.5 w
2.5 M
n
512.529 328.334 m
500.142 326.56 l
487.778 324.788 l
475.391 323.156 l
463.027 321.525 l
454.029 320.391 l
450.64 320.036 l
438.276 318.547 l
425.889 317.199 l
413.525 315.923 l
401.137 314.717 l
388.773 313.653 l
376.386 312.66 l
364.022 311.738 l
351.66 310.958 l
339.272 310.32 l
326.908 309.752 l
314.52 309.327 l
302.157 309.043 l
289.77 308.83 l
277.406 308.76 l
265.018 308.76 l
265.018 308.76 l
141.287 308.76 l
141.287 309.675 l
141.287 659.389 l
512.529 659.389 l
512.529 328.381 l
512.529 328.334 l
h
S
n
1.0 sc
359.275391 282.787109 68.000000 61.000000 rectfill

n
141.287 435.28 m
142.534 440.517 l
143.78 444.891 l
145.001 448.735 l
146.248 452.182 l
147.469 455.43 l
148.715 458.478 l
149.961 461.395 l
151.183 464.179 l
152.429 466.896 l
153.675 469.481 l
154.896 472.0 l
156.143 474.452 l
157.389 476.772 l
158.61 479.092 l
159.857 481.345 l
161.103 483.599 l
162.324 485.786 l
163.57 487.907 l
164.817 490.028 l
166.038 492.082 l
167.285 494.071 l
168.506 496.125 l
169.752 498.048 l
170.999 500.036 l
172.22 501.958 l
173.466 503.814 l
174.713 505.736 l
175.934 507.592 l
177.18 509.381 l
178.426 511.237 l
179.648 513.027 l
180.894 514.816 l
182.141 516.54 l
183.362 518.263 l
184.608 520.053 l
185.855 521.71 l
187.076 523.433 l
188.322 525.156 l
189.543 526.813 l
190.79 528.47 l
192.036 530.127 l
193.257 531.784 l
194.503 533.375 l
195.75 534.966 l
196.971 536.623 l
198.217 538.213 l
199.464 539.804 l
200.685 541.329 l
201.931 542.919 l
203.178 544.444 l
204.399 546.034 l
205.645 547.559 l
206.892 549.083 l
208.113 550.607 l
209.359 552.132 l
210.581 553.59 l
211.827 555.115 l
213.073 556.573 l
214.294 558.098 l
215.54 559.556 l
216.787 561.014 l
218.008 562.472 l
219.254 563.93 l
220.501 565.388 l
221.722 566.847 l
222.969 568.238 l
224.215 569.697 l
225.436 571.155 l
226.682 572.547 l
227.929 573.938 l
229.15 575.33 l
230.396 576.788 l
231.618 578.18 l
232.864 579.572 l
234.11 580.964 l
235.331 582.29 l
236.578 583.682 l
237.824 585.073 l
239.046 586.399 l
240.292 587.791 l
252.655 601.18 l
265.043 614.17 l
277.406 626.83 l
289.794 639.158 l
302.157 651.287 l
314.545 659.903 l
326.908 659.903 l
339.297 659.903 l
351.66 659.903 l
364.048 659.903 l
376.41 659.903 l
388.799 659.903 l
401.162 659.903 l
413.55 659.903 l
425.913 659.903 l
438.276 659.903 l
450.664 659.903 l
463.027 659.903 l
475.415 659.903 l
487.778 659.903 l
500.166 659.903 l
511.309 659.903 l
511.309 659.903 l
141.287 659.903 l
141.287 435.281 l
141.287 435.28 l
0.7804 sc
f
n
141.287 133.574 m
512.529 133.574 l
0.0 sc
S
0.2835 w
n
141.287 133.574 m
141.287 147.56 l
S
0.5 w
n
203.153 133.574 m
203.153 147.56 l
S
n
265.018 133.574 m
265.018 147.56 l
S
n
326.908 133.574 m
326.908 147.56 l
S
n
388.773 133.574 m
388.773 147.56 l
S
n
512.529 133.574 m
512.529 147.56 l
S
n
153.65 133.574 m
153.65 140.533 l
S
n
166.039 133.574 m
166.039 140.533 l
S
n
178.401 133.574 m
178.401 140.533 l
S
n
190.765 133.574 m
190.765 140.533 l
S
n
215.516 133.574 m
215.516 140.533 l
S
n
227.904 133.574 m
227.904 140.533 l
S
n
240.267 133.574 m
240.267 140.533 l
S
n
252.655 133.574 m
252.655 140.533 l
S
n
277.406 133.574 m
277.406 140.533 l
S
n
289.77 133.574 m
289.77 140.533 l
S
n
302.157 133.574 m
302.157 140.533 l
S
n
314.52 133.574 m
314.52 140.533 l
S
n
339.272 133.574 m
339.272 140.533 l
S
n
351.66 133.574 m
351.66 140.533 l
S
n
364.022 133.574 m
364.022 140.533 l
S
n
376.386 133.574 m
376.386 140.533 l
S
n
401.137 133.574 m
401.137 140.533 l
S
n
413.525 133.574 m
413.525 140.533 l
S
n
425.889 133.574 m
425.889 140.533 l
S
n
438.276 133.574 m
438.276 140.533 l
S
n
141.287 659.903 m
512.529 659.903 l
S
0.2835 w
n
141.287 659.903 m
141.287 645.852 l
S
0.5 w
n
203.153 659.903 m
203.153 645.852 l
S
n
265.018 659.903 m
265.018 645.852 l
S
n
326.908 659.903 m
326.908 645.852 l
S
n
388.773 659.903 m
388.773 645.852 l
S
n
450.64 659.903 m
450.64 645.852 l
S
n
512.529 659.903 m
512.529 645.852 l
S
n
153.65 659.903 m
153.65 652.878 l
S
n
166.039 659.903 m
166.039 652.878 l
S
n
178.401 659.903 m
178.401 652.878 l
S
n
190.765 659.903 m
190.765 652.878 l
S
n
215.516 659.903 m
215.516 652.878 l
S
n
227.904 659.903 m
227.904 652.878 l
S
n
240.267 659.903 m
240.267 652.878 l
S
n
252.655 659.903 m
252.655 652.878 l
S
n
277.406 659.903 m
277.406 652.878 l
S
n
289.77 659.903 m
289.77 652.878 l
S
n
302.157 659.903 m
302.157 652.878 l
S
n
314.52 659.903 m
314.52 652.878 l
S
n
339.272 659.903 m
339.272 652.878 l
S
n
351.66 659.903 m
351.66 652.878 l
S
n
364.022 659.903 m
364.022 652.878 l
S
n
376.386 659.903 m
376.386 652.878 l
S
n
401.137 659.903 m
401.137 652.878 l
S
n
413.525 659.903 m
413.525 652.878 l
S
n
425.889 659.903 m
425.889 652.878 l
S
n
438.276 659.903 m
438.276 652.878 l
S
n
463.027 659.903 m
463.027 652.878 l
S
n
475.391 659.903 m
475.391 652.878 l
S
n
487.778 659.903 m
487.778 652.878 l
S
n
500.142 659.903 m
500.142 652.878 l
S
n
141.287 133.574 m
148.69 133.574 l
S
n
141.287 192.033 m
148.69 192.033 l
S
n
141.287 309.018 m
148.69 309.018 l
S
n
141.287 425.935 m
148.69 425.935 l
S
n
141.287 542.919 m
148.69 542.919 l
S
n
141.287 659.903 m
148.69 659.903 l
S
n
141.287 133.574 m
145.001 133.574 l
S
n
141.287 250.492 m
145.001 250.492 l
S
n
141.287 367.476 m
145.001 367.476 l
S
n
141.287 484.46 m
145.001 484.46 l
S
n
141.287 601.378 m
145.001 601.378 l
S
n
512.529 133.574 m
505.102 133.574 l
S
n
512.529 309.018 m
505.102 309.018 l
S
n
512.529 425.935 m
505.102 425.935 l
S
n
512.529 542.919 m
505.102 542.919 l
S
n
512.529 659.903 m
505.102 659.903 l
S
n
512.529 133.574 m
508.815 133.574 l
S
n
512.529 250.492 m
508.815 250.492 l
S
n
512.529 367.476 m
508.815 367.476 l
S
n
512.529 484.46 m
508.815 484.46 l
S
n
512.529 601.378 m
508.815 601.378 l
S
150.719 608.684 m
%ADOBeginSubsetFont: ZFNBAA+Helvetica AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/ZFNBAA+Helvetica findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6079F1E210C2F9D6786425CC99EBE4B6CD195D3C159170B14
2780B60B004B88EC635D5140089E50EAFFA241767EA05CB13B768D326E39D0A6
3970CC75B69D7BE71D789A78E82369A15910> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/space <1C60D8A8C9B854D00D> |-
/B <1C60D8A8C9B64EDF8861093A50D70CE704C3B99B255E57C25F5628D6A25D
CF329FDC490B240CA8E3263684788E9E559211DF7A652BCEA6E7473D11540293
3A862D3C0BED9681856F5ACE8B339645A6A4CED62CD1A26855F2D51956984EE1
3F47812E810D9E8C98922B6C1937C1681825270D4D77D4BBDEECB712B7702AEE
C61BE96AFEBE20DFCCFCC19F8646EA0A427DFBAA43CEB1ACB616853A6CD4C3E4
CEE20B743FFD4303148B5B4D479ED1038084D37CCEE34880877DCE43721DF888> |-
/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D7
2A7354004DF70944005F20755FAB3631> |-
/g <1C60D8A8C9B7EF3227AC78F20225D02AD1F5838626D1D2CB26D9A686345F
DBA7E6AD7CBBFB0968E5439577010C655F74DB6EC4A53F96DD554986565E4345
C3B0DB42345596269AD0BEDF0DE0FF0CEC2214730A572502B5B1C377714234C3
B835458280E4747C6986CC44F3A27E4CCC92606F912C02778569997A6186F8A1
606F089477CA3B9FEB77CDBA1E20BDD3E0AF3FDCB15E3FF07A1424B7C6719CE0
9398ACEECAAF6B2812773D6272899C> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA400CC7CAD541AB907F903F935F
123595D5AAC76B7423BF56DAA953AABB30D3C158CBC49165B8067C6456A899E4
3A57DF6E4E8AB8002AB2FFE795F17DA3C0165F34038912EBD94962135F448EB9
A90E2C7E6E7F31818C09B9ED66D47DE4FCBEA13796BDA6590474BAAB3926D1FD
12190612E017AA015628D2E79EA8BD9BA8890ADD2020DB8778488A172689E9B4
E5800C4FC32EAC7FC1BF3EF2690C8233D8F11C29611AE962> |-
/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA56325
4EC441C4BC3817B6ABCAA45C3FADDF2A0C1FDBAFB2BC83F47DAFA77A786BA902
BA43197292E50CF57803A333B50FFCC316B4278D48D0702F544078D86E929B14
A38322C9A0C5BF9B9E5C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ZFNBAA+Helvetica findfont /Encoding get
dup 78 /N put
dup 111 /o put
dup 32 /space put
dup 66 /B put
dup 105 /i put
dup 103 /g put
dup 97 /a put
dup 110 /n put
pop
end
%ADOEndSubsetFont
/N52 [15.3432 0.0 0.0 18.0 0.0 0.0] Tf
(No Big Bang)
[11.0778 8.53082 4.26541 10.234 3.40619 8.53082 4.26541 10.234 8.53082 8.53082 8.53082 
] pdfxs
n
141.287 133.574 m
512.529 133.574 l
S
0.2835 w
n
141.287 133.574 m
141.287 147.56 l
S
0.5 w
n
203.153 133.574 m
203.153 147.56 l
S
n
265.018 133.574 m
265.018 147.56 l
S
n
326.908 133.574 m
326.908 147.56 l
S
n
388.773 133.574 m
388.773 147.56 l
S
n
512.529 133.574 m
512.529 147.56 l
S
259.19 108.411 m
%ADOBeginSubsetFont: ZFNBAA+Helvetica AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/ZFNBAA+Helvetica findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF327C10274AD9026AD10E2766BF7084C2014D15DE0295
8A6977C33F9C9651D5788EA2FB530B3EE42DE5824448> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ZFNBAA+Helvetica findfont /Encoding get
dup 49 /one put
pop
end
%ADOEndSubsetFont
/N52 20.002 Tf
(1) show
382.946 108.411 m
%ADOBeginSubsetFont: ZFNBAA+Helvetica AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/ZFNBAA+Helvetica findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ZFNBAA+Helvetica findfont /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
(2) show
136.339 108.411 m
%ADOBeginSubsetFont: ZFNBAA+Helvetica AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/ZFNBAA+Helvetica findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ZFNBAA+Helvetica findfont /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
(0) show
259.19 108.411 m
(1) show
382.946 108.411 m
(2) show
506.702 108.411 m
%ADOBeginSubsetFont: ZFNBAA+Helvetica AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/ZFNBAA+Helvetica findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319E4220BC810B4
CADF2216B3056307D1DA8A73EC78180A0FB2BB871CD9EF56ACC1CD52B6B9416F
F0F6CC105DB9F235573EA49040A80A9111450BB0A3B96123E69E500815CFC7CF
564552067BED0784FB65E0D025591F822D7ED553FA9ACD59EB8A476CA7B6AD8E
268F493C2C91D99FF49648FFC2772170FE015289F1DCCFD377216FF1F5ADD3B4
D09EAA924593AF3FAC43C888F801B765C80AD39E3E3AC8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ZFNBAA+Helvetica findfont /Encoding get
dup 51 /three put
pop
end
%ADOEndSubsetFont
(3) show
n
153.65 133.574 m
153.65 140.533 l
S
n
166.039 133.574 m
166.039 140.533 l
S
n
178.401 133.574 m
178.401 140.533 l
S
n
190.765 133.574 m
190.765 140.533 l
S
n
215.516 133.574 m
215.516 140.533 l
S
n
227.904 133.574 m
227.904 140.533 l
S
n
240.267 133.574 m
240.267 140.533 l
S
n
252.655 133.574 m
252.655 140.533 l
S
n
277.406 133.574 m
277.406 140.533 l
S
n
289.77 133.574 m
289.77 140.533 l
S
n
302.157 133.574 m
302.157 140.533 l
S
n
314.52 133.574 m
314.52 140.533 l
S
n
339.272 133.574 m
339.272 140.533 l
S
n
351.66 133.574 m
351.66 140.533 l
S
n
364.022 133.574 m
364.022 140.533 l
S
n
376.386 133.574 m
376.386 140.533 l
S
n
401.137 133.574 m
401.137 140.533 l
S
n
141.287 133.574 m
148.69 133.574 l
S
n
141.287 192.033 m
148.69 192.033 l
S
n
141.287 309.018 m
148.69 309.018 l
S
n
148.69 425.935 m
141.287 425.935 l
S
n
141.287 542.919 m
148.69 542.919 l
S
n
141.287 659.903 m
148.69 659.903 l
S
n
141.287 133.574 m
145.001 133.574 l
S
n
141.287 250.492 m
145.001 250.492 l
S
n
141.287 367.476 m
145.001 367.476 l
S
n
141.287 484.46 m
145.001 484.46 l
S
n
141.287 601.378 m
145.001 601.378 l
S
n
141.287 659.903 m
512.529 659.903 l
S
0.2835 w
n
141.287 659.903 m
141.287 645.852 l
S
0.5 w
n
203.153 659.903 m
203.153 645.852 l
S
n
265.018 659.903 m
265.018 645.852 l
S
n
326.908 659.903 m
326.908 645.852 l
S
n
388.773 659.903 m
388.773 645.852 l
S
n
450.64 659.903 m
450.64 645.852 l
S
n
512.529 659.903 m
512.529 645.852 l
S
n
153.65 659.903 m
153.65 652.878 l
S
n
166.039 659.903 m
166.039 652.878 l
S
n
178.401 659.903 m
178.401 652.878 l
S
n
190.765 659.903 m
190.765 652.878 l
S
n
215.516 659.903 m
215.516 652.878 l
S
n
227.904 659.903 m
227.904 652.878 l
S
n
240.267 659.903 m
240.267 652.878 l
S
n
252.655 659.903 m
252.655 652.878 l
S
n
277.406 659.903 m
277.406 652.878 l
S
n
289.77 659.903 m
289.77 652.878 l
S
n
302.157 659.903 m
302.157 652.878 l
S
n
314.52 659.903 m
314.52 652.878 l
S
n
339.272 659.903 m
339.272 652.878 l
S
n
351.66 659.903 m
351.66 652.878 l
S
n
364.022 659.903 m
364.022 652.878 l
S
n
376.386 659.903 m
376.386 652.878 l
S
n
401.137 659.903 m
401.137 652.878 l
S
n
413.525 659.903 m
413.525 652.878 l
S
n
425.889 659.903 m
425.889 652.878 l
S
n
438.276 659.903 m
438.276 652.878 l
S
n
463.027 659.903 m
463.027 652.878 l
S
n
475.391 659.903 m
475.391 652.878 l
S
n
487.778 659.903 m
487.778 652.878 l
S
n
500.142 659.903 m
500.142 652.878 l
S
n
512.529 133.574 m
505.102 133.574 l
S
n
512.529 309.018 m
505.102 309.018 l
S
n
512.529 425.935 m
505.102 425.935 l
S
n
512.529 542.919 m
505.102 542.919 l
S
n
512.529 659.903 m
505.102 659.903 l
S
n
512.529 133.574 m
508.815 133.574 l
S
n
512.529 367.476 m
508.815 367.476 l
S
n
512.529 484.46 m
508.815 484.46 l
S
n
512.529 601.378 m
508.815 601.378 l
S
[/DeviceCMYK] cs 1.0 0.0 0.0 0.0 sc
368.15 318.642 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB40537D3B34E4D85733A582F
C4A35A139249CD52BC9F3D8702E5238EA1584552BB139B2FA8E8AF6ADB725AC9
88E8038C63CC98292FA274964F057DD3DD90F918CCDB06CF8FF9093CFB289906
8DCE9A23D07E1368> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 101 /e put
pop
end
%ADOEndSubsetFont
/N55 [17.0638 1.6596 -2.5458 26.1757 0.0 0.0] Tf
(e) show
375.774 319.383 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B7A73DC5490245197C6A10ADDC3E0FA58392059EC7D8F6B66F
B0930B38EB119ACB6A2A3F634D77F5CF7C8D99C62501D6684A6FD07A49AFFC3C
8D4A82B3CF26A1008A17EB4D755FF3A3C27A9298224B64119007CCAAEA399519
8EBFE01F45BC69C30B7E1A4D982888B5DD81639A4A2DA136A3E428D0A595B9A5
8BF3FC51A3D02F84500357BC921E0BFA04EAA952CD025134ADA1AFF991B717E5
79B115CB21F977FC30518E451DAED8EC94A51DE4E7F43A48D0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 120 /x put
pop
end
%ADOEndSubsetFont
(x) show
384.441 320.239 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4DA245FA5
07D024F28401075285D307468CE0D757751AAB4F3490756973E462106B10BD76
63199C4B8A27D5695A680192DE86699DAAF1A89717FDB65265476969999FB7D7
847B55845008C66520A977913643311D83941F927D5B958DBE761028866277B0
1C9604CB3013C82C039B9AE8C95A3C2834B9ED8E05831C8156944A7F9B872094
AF1AB63EB96F8DF66A491A85E4F72D480F637D538DE8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 112 /p put
pop
end
%ADOEndSubsetFont
/N55 [17.0528 1.7589 -2.7009 26.1594 0.0 0.0] Tf
(p) show
393.103 321.126 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B77FE2B8A4D222FB41F47F459CA0D95123D06ECF654AB05FF5
B6DC144FC9BBEC366E5ECC063C78F59640CE32DD9D219C4F4385FAEDBC60FF33
4CB1D3BF02D9F353F73914E29D9DD64FAA28B45E23265BD78A90B345EFEAD972
A0D93CE817026DBF17DB9E8E49AD8C2AF4FC6486D49F260206F186E614E3D16B
2F4AD46463A28F92ED5F2851044761192B9ADCF8B12C73A96A7E57C5841BD16A
930132DACDF469EE0C2A8F85A167570E289B5609FF9CB20DD38C9C84A9BB9FC8
A7014AC491483F6C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 97 /a put
pop
end
%ADOEndSubsetFont
/N55 [17.0468 1.8537 -2.8439 26.1526 0.0 0.0] Tf
(a) show
400.721 321.954 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C634F1E9284F6FC7263
711D03C47F22A203EB41F88268C104BC4A61C7649DA42D5BE18FE7F731730EB4
D130993D14FEE046DD67E78C9CE5C5598D396AB18A5366D9E71D2D6A292A9108
9ACF40B09098B729C4807DB1C9D54B7EE1602D3D091D4525D3E7868AFA4B4D0D
EB009172C2D67F26ED44CA4931A6533F30AB34> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 110 /n put
pop
end
%ADOEndSubsetFont
(n) show
409.448 322.932 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7A73DCF5C5F7CCFE122477E3699B91C9B1BF29D2B29542C32
F7957B9A8BE8AC2B124B6CFCCBF5CAA8053FE5EA68FA8C64E7237CD261CCDDAD
B6D7FF183FE89F32FD833911C6422F956670D0BED122371EEA9A31A46960E7D2
366E54A6F667D56A230AE84D8194E40226A12C56215AAF624BA8C70D7C6F95AB
3AEEDC3DE33026E2BEC59C39310BCFA3263C47677D87159592AD0708AFE26216
555BD3CF572A1DFF596BF5362327426A34E56A99D6D9B6A1D97B483918C5EF96
830B2D99C781B38078BC37F61FE9BD6ED322E50A5650A417437C54212F3D5212
23> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 100 /d put
pop
end
%ADOEndSubsetFont
/N55 [17.0182 2.0484 -3.1453 26.1089 0.0 0.0] Tf
(d) show
417.948 323.978 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7361F743FE5C092782516B89C667F24852F2833C914D37274
1C204CB19829CF798EC00B6F60FD56301EF9B4136E1F422FAA9773C81ADFC08A
FD24624819F92289BABB5D2A560D29B4C37B5C72F295B1A8757B2DDC4F96A3A7
A76D5B8850E9D3B3108E173E7C2AC94ED9F5B4EBB2AC4F74997A581EAA1D8190
963213A6DBA3FD99B4DDDF91DEB606EB29DAC3E030DB9A2BEA3B60C98F55A0A9
B8097DA00FD849056413A4E04E950801ED07C405C45837491E4864754EBADCC3
2B5232850305BAEEDA0A345554138E3B49E2F7260D37E80E4C37FED6327D7438
DA6B2E0355D0043D6795C50CA3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 115 /s put
pop
end
%ADOEndSubsetFont
/N55 [17.0517 1.783 -2.7379 26.1592 0.0 0.0] Tf
(s) show
429.327 325.296 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF
77C72CE9F4FF44E681C46DF934E6F13477EDB282AE0A0AEB3C1EAE1FE7BD0F6D
E854793C6EBB102BA640EE2A1937B205F1275AE2A18BEEEA6F56A75ACE6F8742
D16A82839984> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 102 /f put
pop
end
%ADOEndSubsetFont
/N55 [16.9954 2.244 -3.4399 26.0729 0.0 0.0] Tf
(f) show
435.023 326.047 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34A93F0BF7A993E
7B76B394E0DD4E0D515EE382B893A080E29B40A4402A4A406056947B5B2334F6
D5909CCB56B0284CEFC066661E9D6B7471673D105428B9DFDD7F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 111 /o put
pop
end
%ADOEndSubsetFont
(o) show
443.584 327.177 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C6076AEA2DF2F336244DA608D
0666A9C39147579BE5F84064BA5DCF6CD4C576D0177C42EAE7438D00AB1D6595
6107D443F0AD6F08A63F5306BE8A1920B3CB273D9CF24739F3E4740FB53EC981
D22501D5AF8E600BA9EEBFA742EC328561AB6E257A9B7C3C0B4F8CAC20D46ECD
F05FEB5C54162C09AD2C0169673C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 114 /r put
pop
end
%ADOEndSubsetFont
/N55 [17.0018 2.238 -3.4331 26.0839 0.0 0.0] Tf
(r) show
449.196 327.916 m
(e) show
456.959 328.943 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B7A73DDC2846ECA263561BB4F0CB265FF24368623DA96FEDE7
6204DF8B0EC0AB4F60A8D28FCF9D21B445814A1976831A796C43EF58C4605ABE
CE010A1D9BF2BAF6904BAEB3609ABABD10A6FCE3E7F2ADCCAEF32E1C3FE17F0B
E1D1C97B832631C8537D1E3A59FB6CACD0B1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 118 /v put
pop
end
%ADOEndSubsetFont
/N55 [16.9728 2.433 -3.7348 26.0356 0.0 0.0] Tf
(v) show
465.593 330.183 m
/N55 [16.9712 2.4276 -3.7265 26.0333 0.0 0.0] Tf
(e) show
473.18 331.269 m
(r) show
[1.1339 2.8347 ] 0.0 d
n
340.941 309.018 m
512.529 309.018 l
[/DeviceGray] cs 0.0 sc
S
0.2835 w
[] 0.0 d
n
141.287 312.271 m
141.287 276.418 l
S
116.674 182.688 m
%ADOBeginSubsetFont: ZFNBAA+Helvetica AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/ZFNBAA+Helvetica findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3AC7E044D0946E6D2305FBC1A5806554FDBB52A
75CA669> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ZFNBAA+Helvetica findfont /Encoding get
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
/N52 [20.058 0.0 0.0 20.002 0.0 0.0] Tf
(-1)
[6.67916 11.1522 ] pdfxs
120.188 299.671 m
(0) show
120.188 416.589 m
(1) show
120.188 533.573 m
(2) show
120.188 643.531 m
(3) show
120.188 533.573 m
(2) show
120.188 643.531 m
(3) show
387.543 247.292 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD79216DBC0D30C20B
16F949C4DACB51911E080D5D4FADB2A127C4AB23B312E9F44F985AA21BA1A9B7
1EA7AE21C439E05A319047A6D64BC1D4392480160430400AFA5C943510A8521B
80B0990CB49D8F01EE3F> |-
/l <1C60D8A8C9B854D08887A955FDB583C10487D3666DB50B4DADE0EC1137BB
795306205027EDAC983BD177C55444B622C3F9984AD7B008877068E438C454AC
8927C615E0E8B502F68753A1A9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 99 /c put
dup 108 /l put
pop
end
%ADOEndSubsetFont
/N55 [15.3783 -14.301 14.343 15.3384 0.0 0.0] Tf
(closed)
[6.82797 -6.34965 4.27517 -3.97568 7.68915 -7.1505 5.98228 -5.5632 6.82797 -6.34965 7.68915 -7.1505 ] pdfxys
[/DeviceCMYK] cs 0.0 0.5 0.5 0.0 sc
341.797 283.261 m
/N55 [17.1082 1.0817 -1.6568 26.2462 0.0 0.0] Tf
(r) show
347.71 283.604 m
/N55 [17.0944 1.2754 -1.9566 26.2243 0.0 0.0] Tf
(e) show
355.311 284.172 m
(c) show
363.04 284.75 m
/N55 [17.0875 1.3697 -2.1013 26.2151 0.0 0.0] Tf
(o) show
371.615 285.437 m
(l) show
376.521 285.84 m
/N55 [17.079 1.4708 -2.2538 26.2011 0.0 0.0] Tf
(l) show
381.353 286.256 m
(a) show
389.135 286.945 m
/N55 [17.0638 1.6596 -2.5458 26.1757 0.0 0.0] Tf
(p) show
397.823 287.779 m
/N55 [17.0528 1.7589 -2.7009 26.1594 0.0 0.0] Tf
(s) show
404.492 288.468 m
(e) show
412.271 289.272 m
/N55 [17.0468 1.8537 -2.8439 26.1526 0.0 0.0] Tf
(s) show
423.386 290.468 m
/N55 [17.0182 2.0484 -3.1453 26.1089 0.0 0.0] Tf
(e) show
430.945 291.379 m
(v) show
439.613 292.366 m
/N55 [17.0151 2.1455 -3.2911 26.0998 0.0 0.0] Tf
(e) show
447.298 293.323 m
/N55 [16.9954 2.244 -3.4399 26.0729 0.0 0.0] Tf
(n) show
455.775 294.441 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D082F829CADA24029904B667043F82AAF5798ADB1AF637
87A08D89C04AC22E998B93D82023FC776DB3B03794FD10AD1A9169D67270B70C
C8030C1164B605608F8ED713A3CC4AFDDB0825DD3A8B4DD78D9148075B5FF6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 116 /t put
pop
end
%ADOEndSubsetFont
(t) show
460.531 295.07 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u <1C60D8A8C9B7A73DE1FEDB8466C8FCD68C94DEDB7A49373DBA7A1C9E1A28
71D4C90F71B659C0863047F14CB42982EA4063AFBFAAC6B3D2E5BB97E3BAD699
7448B1489AE8DACB9CE04A84F3304C7E15BDB3FC7CF43910D25F6E498A671132
04F00FAA06B758EDD80721494126EFEC5BBD3D99372C58318E864E11C8F7BF91
62FC93419A4533C6E009EA9CDBD9062EB4D84947ADD5D4EC1CAB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 117 /u put
pop
end
%ADOEndSubsetFont
/N55 [17.0018 2.238 -3.4331 26.0839 0.0 0.0] Tf
(u) show
469.161 296.206 m
(a) show
476.909 297.261 m
/N55 [16.9725 2.433 -3.732 26.0349 0.0 0.0] Tf
(l) show
481.655 297.941 m
(l) show
486.429 298.626 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B7A73DB5828C8EB66C86A2CEEEF3783234CAB54F02AC5BECA9
34D4C3035BDC41358612FD6E1BC5350B8D1DD105076DB794248C0C98CBED3EDF
452F448247582C15974F0D747D31D5F600EB1E61D9E83F9F41926FEEAAC9377F
B1927B010879CBC0B37DE7B7E361C461AAD3428655DB1782170F0E236123E406
C9F566DB7589AA15856E58640BCFE6654A802AC1B0A27F3DE2C1215C078D11E9
CD2EF4F0BAA5D38AE4BB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 121 /y put
pop
end
%ADOEndSubsetFont
/N55 [16.9712 2.4276 -3.7265 26.0333 0.0 0.0] Tf
(y) show
0.5 w
n
512.529 328.334 m
500.142 326.56 l
487.778 324.788 l
475.391 323.156 l
463.027 321.525 l
454.029 320.391 l
450.64 320.036 l
438.276 318.547 l
425.889 317.199 l
413.525 315.923 l
401.137 314.717 l
388.773 313.653 l
376.386 312.66 l
364.022 311.738 l
351.66 310.958 l
339.272 310.32 l
326.908 309.752 l
314.52 309.327 l
302.157 309.043 l
289.77 308.83 l
277.406 308.76 l
265.018 308.76 l
265.018 308.76 l
141.287 308.76 l
141.287 309.675 l
141.287 659.389 l
512.529 659.389 l
512.529 328.381 l
512.529 328.334 l
h
[/DeviceGray] cs 0.502 sc
S
[/DeviceCMYK] cs 1.0 0.24 0.0 0.0 sc
281.295 482.963 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B64EDF7BB34086DE0E69D005AD8E9E66825A027D43F0559C48
6AC94D3DD86F85EB58B37AA1692EAB0FAB8D56C7AD8E1B88FBF462CA4C912FB7
3907C0D2EF3AA87FECC9EB15A57381F9381559F5685C58C3EE70FE7127B562F1
D401BEAC6745482FD97C6C157A7C097A12A379FCAA7AB89EB44941261F422F6E
0B4AFA2C> |-
/u <1C60D8A8C9B7D8BE41A64DAA3D1FBF6AD64BF10E6BBD171928C42148CFB3
4EF13F05530B794DA58DCBBC7B81F81ADF08DC552C8FB593709432B58C7781B9
B8A647542B4760C033213D81EF87B052F8072601BBF3164B9B796691D1306356
ED9DD0E9F0C46F73262F4E7A50AEAF368C7723> |-
/p <1C60D8A8C9B7D8BE1A134861007F288709A026F4EAD441D0DB9001EABE2D
B92C5255FB184DB483EADFB48D2A88F026A2DD6EDE516F48FD443804CF9B7403
384A077AD30002C76ABA036DBBD46EFDA92B4EE0B7CC2E41CE6F03D681AB67A6
943524EEC72E907786EFDF10215A97E25147712684BE980577BC11BFE0413A23
5E7ADDC08DE261A758229961668104357A71DDB42A5F330CD2DF0F> |-
/e <1C60D8A8C9B7EF32A1CB45752FF6523DA5288185EF43DD045146AAD81675
EF96A1DDE9797BFF08369703AB5B932EB4FC76842B8FAFEA26499EB28D9010BF
45781D64B0753AFDAAF76627560E41BCFD847C893FE9E9680771D287E1806D72
84DB4BF9596E39109D2864B1FF> |-
/r <1C60D8A8C9B7361F55E947F94FA9A74271AD89AF0ACFDBA20EED9EF285A4
8659332E27E557A0A575DD525BBCE890D404508496BF16A92B81F66619D70402
C8D72AF76C7243E9544720CB7C4B40CD5D238237C30B32E563> |-
/n <1C60D8A8C9B7D8BE41A64DAAD50EBDD41CADFC55395F79E79D65C1305616
5B4B592635D62DE2A0394E5032302F5CFACECE059BF877A8313C2AACD1E23323
A6DC0569FC07221BACC79EF8100AE4A1FB5DDB16A4DD38E8CC77C17FB1D2CB66
0A3721D14AE87BD921727B4AFA4B53E9E311A5F7> |-
/o <1C60D8A8C9B7D8BE9CC6F749512707A5CB05AB5243B0645F9444C502F419
3FB356ABA45B4FA26E907D725C29EBD51C6E82BD7C0D8F7061BDD006EA19F724
8676AEE29D27B87199433A93CBAD6CD52EE44525E04315718039BB53845EEB> |-
/v <1C60D8A8C9B7EF327C10274AF641B7B804C483A6101286CFEABAD99F71CF
AAF3C0D30E527F563907E1EEF96DCAADF76E9336115A69DFE7D1F5556450A4CC
216F507C> |-
/a <1C60D8A8C9B7EF325730A2907F61B00205C0A296C9DF32E9DC65B526E2F4
C8ADC580B897B7206A5DA59C9696BB00EA7F1A0A06C73023E46EC804A076F02D
F4BDC69A6135461545FA8A14BD27F8CF4F25F4943E37F1D1C65276DECB4E9D6A
C0EC48F60EFDBE12AA6587FCF164CC3DB45D2B5A65777B03419394CDDD24FF22
F21243F8E28ED1FF2DD09C8E2A84D298381AAD9550B39360621CE1C759F80798
D4E2E93482B63D0349BE8E88D5485F93034964B138E766D0A08074C8EC8EE58B
FBF92479BF1434BFA703> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 83 /S put
dup 117 /u put
dup 112 /p put
dup 101 /e put
dup 114 /r put
dup 110 /n put
dup 111 /o put
dup 118 /v put
dup 97 /a put
pop
end
%ADOEndSubsetFont
/N49 [18.0522 0.0 0.0 18.0 0.0 0.0] Tf
(Supernovae)
[12.041 11.0298 11.0298 10.037 7.02244 11.0298 11.0298 10.037 10.037 10.037 ] pdfxs
1.0 0.0 1.0 0.0 sc
238.081 360.504 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B6079FED37BD4297810A8F45ACF55D8D12634D77C5813B2BA5
52EE475FAE4879F3DD2AB20BD9945A4E8BDD86137D53ADEDD687C2FA6D371D3F
79E1AF8B21C167D0A1C13C40E843C9F29F0084A04288AE92384343780B0ACE2E
7B05F0> |-
/M <1C60D8A8C9B6B41CEC825914A1E3958CFE8FD77A6F6E51C6824A8F58C671
4C5532DE247932C83A4EC8455C50B237C80EFE20B9E7321075D81E8A642F1941
13F84D0940B7A862B94496AA26990CD82F4543BDACE17AE0FCBB004A5F1B95DB
60630EE64CB507E1> |-
/B <1C60D8A8C9B6079F1E21021F82EA7F7A31435010A538C84C74ECF818608C
76C5FD8F497040FA351006E69F6B41C23057B63E94B22FFC969C3C7A98FBA405
418A144398A0400E343D089BFC59142ADF6BB522F2F2D34E4A375D4F93EAE461
4F15025814D118D01A60926B0893967575CA076BC8418AD4C84326E234E84910
BDF0B5D157DF173EA430F88835B6B4D6A0E65742E6B904812F0B8773D0A56BF4
EB3CA514CD4C66EA829850FF66D9FAF9C1316E27E44D6DE1422CA65C80B690FE
ADF82D045378559E44111502A6B2DDB70EC2C784C2BA3797379716AFFF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 67 /C put
dup 77 /M put
dup 66 /B put
pop
end
%ADOEndSubsetFont
/N49 [18.0516 0.0 0.0 18.0 0.0 0.0] Tf
(CMB)
[13.0333 15.0368 13.0333 ] pdfxs
0.0 0.9 1.0 0.0 sc
153.667 249.966 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B854D0A3953AFD56E13A3C2277C895ED2230AD4B57AED4E6F2
F61F2CD118> |-
/s <1C60D8A8C9B7EF32A1C9A55715442669FEA39943230735B36BA1D69124A6
B1AA7B79900DEB0448AD82C626686D3C052212C9693BA2EC6E8C76C5257C0F0B
2FECF0C8965B7E80E88D5933DCB6695593E142BA9442986AA0B2B7EFBD756559
58EC42C8237A35299C90D006C0588FA33645EE4265089A5192B6362467ECCF3D
708DB299FD09AB0BC857FA6360930849495FB633E34EC6233016D977DF52ACAB
6C2A7605CF8F493B0EEBDF7E74AFA8DE9B91721EF8DA963D85C7D3BFD6D5BDB3
767A41> |-
/t <1C60D8A8C9B81F2C48F08776F2C719518D47AF26D067673C2134BFE8FF0B
E648A55033C05D6EF107FB63837C497CF67E5F2E872B1CB4B010376FE93C318F
F3946E3F8206701C10348C551353812E54> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 108 /l put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/N49 [18.0522 0.0 0.0 18.0 0.0 0.0] Tf
(Clusters)
[13.0337 5.01851 11.0298 10.037 6.01125 10.037 7.02244 10.037 ] pdfxs
n
240.979 308.966 m
222.491 331.453 l
188.714 366.856 l
177.546 381.807 l
161.323 399.003 l
151.74 410.203 l
149.44 412.569 l
147.29 418.17 l
149.057 419.619 l
151.74 420.003 l
154.807 419.319 l
159.407 416.637 l
168.606 409.97 l
178.573 402.069 l
191.99 392.103 l
209.623 379.069 l
245.273 350.47 l
275.771 325.768 l
276.155 309.485 l
240.979 308.966 l
h
n
0.6 w
4.0 M
n
141.287 425.935 m
450.64 133.574 l
[/DeviceGray] cs 0.0 sc
S
1.3 w
n
141.287 425.935 m
450.64 133.574 l
0.502 sc
S
0.0 sc
325.496 185.856 m
/N55 [14.8701 -14.8281 14.8701 14.8281 0.0 0.0] Tf
(open)
[7.43505 -7.41405 7.43505 -7.41405 6.60233 -6.58368 7.43505 -7.41405 ] pdfxys
n
379.748 184.98 m
398.213 213.038 l
358.925 246.505 l
353.935 209.035 l
379.748 184.98 l
[/DeviceCMYK] cs 0.0 0.0 0.0 0.0 sc
f
[/DeviceGray] cs 0.0 sc
355.832 215.767 m
(flat)
[4.95163 -4.93765 4.13389 -4.12221 6.60233 -6.58368 4.13389 -4.12221 ] pdfxys
n
400.36 133.302 m
413.525 150.011 l
438.276 180.633 l
450.64 195.612 l
463.027 210.393 l
475.391 225.04 l
487.778 239.489 l
500.142 253.806 l
512.529 267.989 l
512.529 133.963 l
0.7882 sc
f
[/DeviceCMYK] cs 0.45 0.15 0.0039 0.0 sc
365.264 623.91 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/K <1C60D8A8C9B6079F3517E07490032230DBEB9912E50DF49EB8DF1FB3D50A
EEDAE38673F2292C519F003A101C0067B0119B7BB61F2FE4D45C4CF230D6EF3D
E657E13822> |-
/space <1C60D8A8C9B854D00D> |-
/period <1C60D8A8C9B854D088EA5B7F88398BFE9CE5898B785C3A4D899BB57
FDA8ECA05> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 75 /K put
dup 32 /space put
dup 46 /period put
pop
end
%ADOEndSubsetFont
/N49 14.5 Tf
(Knop et al.)
[10.469 8.85939 8.85939 8.85939 4.031 8.062 4.82839 4.031 8.062 4.031 4.031 
] pdfxs
442.838 623.91 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C36CD048A6E31D860687F6CB6E7E670E3862E
ADA8C7B2EADA7E2FB10356BB4056C21D1A29EB75BDE282B8D3309BFB25BD88B1
C6AF2AAF8171803FE2126F> |-
/two <1C60D8A8C9B7EF325767EC41CBF510D1E0C71F1F1C039215CC32A5B90F
CF87168E35C28244745FCF47A9B7CE070B35171DB218CE7C8F2D9F0726293D9E
65C3C45297780FC122CECE1C36987116C8DB6BB559F3E2FA77AEB29702EDED93
3AF70BCDE4B644F7> |-
/zero <1C60D8A8C9B7EF32A450E6CDC4AB44DF1AD33655FF238CAE6AD63669A
2D943ECD3231ADE89C5D24E23C94CBB0D32F5F0D671CDD46DFC397D7CD753A9F
83EC30828AAA980A054517E2CE1CEDD635EBFF3B0FAC292E5B7338B3D18762F> |-
/three <1C60D8A8C9B7EF32A450E6CDCB2DBC464D59B250EEFF2979227F672D
F84014CA4B38CB512D4CCF36E5DEDFF839105646E67E257143952B81A10A3045
5D7B4ED024AA5203666693D6EEFA8B34039A1C427B41C1902B4F0F7F37B0D9A8
D9DF09FE37892B00C838D65B53057B4424F50870010293A0CFC2B692A0E58825
9D0B3F854A974BFEDD5B7DF632ABAB408F2F376A199773E9BE73701CE908EAEA
851430F0644E76332F9033EE8D1134> |-
/parenright <1C60D8A8C9B81F2C36CD048A6E31D860310175C8D731C3A1FB8
1B277AE54BE1179975D7AA642AA158B6076AF02E6A67802C9F1960475E3DE4E1
02A504C7AD7592FED3D0EB8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 40 /parenleft put
dup 50 /two put
dup 48 /zero put
dup 51 /three put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/N49 [13.63 0.0 0.0 14.5 0.0 0.0] Tf
(\(2003\))
[4.53869 7.57828 7.57828 7.57828 7.57828 4.53869 ] pdfxs
0.55 0.0 0.63 0.0 sc
365.264 606.922 m
/N49 14.5 Tf
(Sper)
[9.67161 8.85939 8.062 5.64061 ] pdfxs
397.28 606.922 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7D8BE1A3055587B34EC2A3DF2B79203F4050AA0B5738ED638
04380D2E13E060816E3421AEA1DC12A32CB72F12790D0531C0BCCFA2CD650E69
BF11A8A0B494E5997E2753F4DC7CC615950DE260CBFC81E5B438A30B9D1AD997
BAB5450F1B8057E9A08FDF0718C939D7BA23C215F3022BCED0B9A537C28F8186
7362D2D294B15570F2321017B898104E0838A83FEEF95313323561CAAA94467F
81A81D82605DBD0767EF388643166EBADEB4C9811852DF8D45F955B91E9BA5C8
9189E75A5728690EB0914B68BFB3277365BBB1F1EFD1E389E99F88EB021EE238
5C968A7A43FF69> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 103 /g put
pop
end
%ADOEndSubsetFont
(g) show
406.284 606.922 m
(el et al.)
[8.062 4.031 4.031 8.062 4.82839 4.031 8.062 4.031 4.031 ] pdfxs
454.874 606.922 m
(  \(2003\))
[4.031 4.031 4.82839 8.062 8.062 8.062 8.062 4.82839 ] pdfxs
0.0 0.29 0.64 0.0 sc
365.264 589.934 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6079F3517E07AE194467F2600CBBF80CDACFF67CA946405EC
4118A902AA9E3AD1C2ACBC1C96ADCDF278A5B068D6AD3EC85B0F1FA9ADA650BA
DCDD259A1E80F048D046> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 65 /A put
pop
end
%ADOEndSubsetFont
(Allen et al.)
[10.469 4.031 4.031 8.062 8.85939 4.031 8.062 4.82839 4.031 8.062 4.031 
4.031 ] pdfxs
437.211 589.934 m
(  \(2002\))
[4.031 4.031 4.82839 8.062 8.062 8.062 8.062 4.82839 ] pdfxs
0.5 w
2.5 M
n
450.64 133.574 m
450.64 147.56 l
[/DeviceGray] cs 0.0 sc
S
n
463.027 133.574 m
463.027 140.533 l
S
n
475.391 133.574 m
475.391 140.533 l
S
n
487.778 133.574 m
487.778 140.533 l
S
n
500.142 133.574 m
500.142 140.533 l
S
n
450.64 133.574 m
450.64 147.56 l
S
n
413.525 133.574 m
413.525 140.533 l
S
n
425.889 133.574 m
425.889 140.533 l
S
n
438.276 133.574 m
438.276 140.533 l
S
n
463.027 133.574 m
463.027 140.533 l
S
n
475.391 133.574 m
475.391 140.533 l
S
n
487.778 133.574 m
487.778 140.533 l
S
n
500.142 133.574 m
500.142 140.533 l
S
n
512.529 192.033 m
505.102 192.033 l
S
n
512.529 145.239 m
508.815 145.239 l
S
n
512.529 156.971 m
508.815 156.971 l
S
n
512.529 168.636 m
508.815 168.636 l
S
n
512.529 180.301 m
508.815 180.301 l
S
n
512.529 203.698 m
508.815 203.698 l
S
n
512.529 215.43 m
508.815 215.43 l
S
n
512.529 227.096 m
508.815 227.096 l
S
n
512.529 238.826 m
508.815 238.826 l
S
n
512.529 192.033 m
505.102 192.033 l
S
n
512.529 250.492 m
508.815 250.492 l
S
1.0 w
4.0 M
n
512.529 133.574 m
512.529 659.903 l
141.287 659.903 l
141.287 133.574 l
512.529 133.574 l
h
S
0.59 sc
141.002 669.474 m
%ADOBeginSubsetFont: GONAAA+Helvetica-Bold AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/GONAAA+Helvetica-Bold findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B59F85DBED304F205490E957BA80A7CE923989279D287A3DB9
7E93876C271A2C24EB89F39ADD151395A0382BD3CF306DD3500A44E02FD331FF
5F6833EC31518A35916D67D8BC58A88311498E0D46D0A13D75376763AA882382
C8F3547A34FF4AF65F97E4FFE5FF22577B793A63A62C968C68E5E59ED9FA05A5
2E2BF36653087848C6B445B278603F0C520FEA9021ED3917FC5606815DEFC9D7
9B> |-
/y <1C60D8A8C9B7EF3227B64BB65630347D8B6F269B778E5768799CAD177A1D
D86278A84113A5016589CCDA6A9A8AD412E70E95AF79D4944E1B465020D3B96E
320C09AE38F2E6BDDBB177084F437920FCE1CE3A4736> |-
/P <1C60D8A8C9B64EDFA3F30AE4FF71B5F4ACB06C7830091ED76355AF57E563
BACE6B9F18382092F649F10A78153D9E643FCA4FB2F0EA425397CD32EF53DFCA
2A21E66880A9FE4531E700C6054694F979479334C9EA> |-
/j <1C60D8A8C9B854D0F807F7E8C853DE4DEF3FADD029EFA68B871BA7E4706E
043F374994269E0428B3A15EADD6F940E4F5972EB31754CB29DFDA3E71A6D88B
2E85602B594776EE> |-
/c <1C60D8A8C9B7EF32A1CB4643D9F758FE77E8D463BA35842541A949191C2F
02CC006533248BF8A594ADFEDBCA6EFE2AD0B0CDB29D2549EC8810C679797327
03F79B63FCECC1D8B448844F0860B1B6591AF549E0E53B4302EC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/GONAAA+Helvetica-Bold findfont /Encoding get
dup 109 /m put
dup 121 /y put
dup 80 /P put
dup 106 /j put
dup 99 /c put
pop
end
%ADOEndSubsetFont
/N49 [13.76 0.0 0.0 16.48 0.0 0.0] Tf
(Supernova Cosmology Project)
[9.17802 8.40726 8.40726 7.65056 5.35274 8.40726 8.40726 7.65056 7.65056 3.82528 9.93472 
8.40726 7.65056 12.2327 8.40726 3.82528 8.40726 8.40726 7.65056 3.82528 9.17802 5.35274 
8.40726 3.82528 7.65056 7.65056 4.58198 ] pdfxs
[/DeviceCMYK] cs 0.0 0.0 0.0 1.0 sc
310.984 71.1445 m
%ADOBeginSubsetFont: JHABAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JHABAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Omega <1C60D8A8C9B6F576981B3A9CC5DCF6B9E2891E21F70CDE3132530414
9327DEC459FD03EE161AE175BD54C04B684219D5E6ED8C6F9032ABC21DD42C0A
946FF0014467180F32364CE1F38E705B2BC595C56F5B55C605CF735D393D974D
04624CB2B624AADB59E50C341DDEAE337030B41C8E17EA099429C3BEEE14434C
1B54E0AC8A127D5F08BCF2793395603A272A21DFF44E734EC1D49DF21CF212B0
51D063ED41BA7FC20DA4ACF2F4795D97F4FA2134358A67FB68D1CEE2B566280A
D58B106A06F21AB61A8D4A2D28F2EE51FD908014B75EBD545A5FEA7350D1B5A6
BCFB5730E346FE11EC64991374E5A5753B6676ACDBEC9B3CF92CE5F9F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JHABAA+Symbol findfont /Encoding get
dup 87 /Omega put
pop
end
%ADOEndSubsetFont
/N46 21.6 Tf
(W) show
63.9849 390.395 m
(W) show
81.2349 383.645 m
%ADOBeginSubsetFont: JHABAA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JHABAA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Lambda <1C60D8A8C9B6232B6469BF27D9CCAFEF545D3936A4FAA7DEB8CF16F
9B3491CA514A441E8391632ABBAC8286BE872454C808A946F89755D20547DAD5
335BFCF90DA3C5423FD226DFF404CF16E6B7916CDC9DA89CA7757F8AD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JHABAA+Symbol findfont /Encoding get
dup 76 /Lambda put
pop
end
%ADOEndSubsetFont
/N46 16.2 Tf
(L) show
329.586 64.7969 m
%ADOBeginSubsetFont: JLBBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/JLBBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B59F859BE0FB9A2A0F7654C6EDCAEDEE9F7FF916442D9C9F4E
D6F42D0588BBB70AFF4A34C797748BF897F607B52C72A4CB4A45FE66E245A32A
75D88FD8959E00389A6DBAED16321CC2D91DF069B6D6467D128CC5B30A969384
52FCD034FAF7C4DC50E3464B901F68B77945A36B587B81F6A85C08C5E954DCBE
A7AEB21BCCFA49> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/JLBBAA+Times-Roman findfont /Encoding get
dup 77 /M put
pop
end
%ADOEndSubsetFont
/N55 16.2 Tf
(M) show
0.5 w
n
260.74 309.071 m
260.74 309.071 260.589 309.201 260.403 309.361 c
260.218 309.521 259.955 309.746 259.817 309.863 c
259.68 309.981 259.373 310.246 259.135 310.451 c
258.897 310.657 258.633 310.886 258.549 310.959 c
258.464 311.033 258.157 311.3 257.866 311.553 c
257.575 311.807 257.311 312.035 257.28 312.06 c
257.249 312.086 256.96 312.336 256.638 312.615 c
256.315 312.896 256.036 313.139 256.016 313.156 c
255.996 313.175 255.732 313.401 255.43 313.66 c
255.127 313.918 254.82 314.184 254.747 314.249 c
254.673 314.315 254.41 314.543 254.161 314.756 c
253.913 314.97 253.605 315.234 253.479 315.344 c
253.352 315.453 253.088 315.682 252.893 315.852 c
252.698 316.021 252.392 316.283 252.214 316.435 c
252.036 316.588 251.77 316.816 251.624 316.943 c
251.477 317.07 251.169 317.335 250.941 317.531 c
250.712 317.727 250.447 317.953 250.352 318.035 c
250.256 318.117 249.948 318.382 249.668 318.625 c
249.388 318.868 249.124 319.096 249.081 319.133 c
249.039 319.169 248.739 319.427 248.415 319.705 c
248.09 319.984 247.82 320.217 247.814 320.223 c
247.807 320.228 247.54 320.453 247.22 320.725 c
246.899 320.997 246.592 321.26 246.537 321.309 c
246.481 321.358 246.214 321.587 245.942 321.816 c
245.671 322.047 245.364 322.307 245.259 322.396 c
245.155 322.484 244.89 322.713 244.67 322.902 c
244.451 323.093 244.145 323.356 243.991 323.487 c
243.837 323.618 243.57 323.847 243.396 323.996 c
243.223 324.145 242.915 324.407 242.714 324.58 c
242.512 324.752 242.248 324.978 242.128 325.082 c
242.008 325.186 241.703 325.451 241.449 325.671 c
241.196 325.891 240.93 326.119 240.859 326.179 c
240.789 326.238 240.481 326.498 240.177 326.757 c
239.872 327.016 239.605 327.243 239.583 327.264 c
239.561 327.285 239.276 327.53 238.952 327.809 c
238.627 328.088 238.337 328.336 238.309 328.359 c
238.281 328.383 238.021 328.609 237.733 328.863 c
237.444 329.117 237.139 329.384 237.054 329.457 c
236.969 329.53 236.706 329.759 236.471 329.965 c
236.235 330.171 235.928 330.439 235.788 330.559 c
235.649 330.678 235.386 330.906 235.204 331.065 c
235.021 331.225 234.714 331.489 234.52 331.654 c
234.327 331.819 234.065 332.048 233.938 332.162 c
233.811 332.277 233.506 332.549 233.26 332.766 c
233.013 332.982 232.757 333.209 232.69 333.268 c
232.624 333.327 232.316 333.601 232.008 333.875 c
231.699 334.148 231.442 334.377 231.438 334.383 c
231.434 334.388 231.177 334.621 230.868 334.9 c
230.56 335.181 230.255 335.452 230.193 335.504 c
230.13 335.555 229.883 335.783 229.643 336.01 c
229.403 336.237 229.098 336.52 228.965 336.637 c
228.831 336.755 228.585 336.98 228.415 337.14 c
228.247 337.299 227.939 337.58 227.732 337.766 c
227.525 337.951 227.274 338.18 227.175 338.273 c
227.075 338.366 226.768 338.648 226.492 338.9 c
226.216 339.151 225.967 339.379 225.938 339.407 c
225.909 339.435 225.644 339.687 225.349 339.967 c
225.053 340.247 224.771 340.513 224.722 340.558 c
224.672 340.603 224.433 340.828 224.189 341.06 c
223.944 341.292 223.637 341.577 223.506 341.695 c
223.374 341.812 223.131 342.041 222.965 342.203 c
222.799 342.364 222.493 342.653 222.286 342.844 c
222.079 343.035 221.833 343.264 221.739 343.352 c
221.646 343.44 221.339 343.729 221.057 343.996 c
220.775 344.264 220.533 344.489 220.52 344.5 c
220.506 344.51 220.254 344.746 219.959 345.025 c
219.664 345.306 219.367 345.583 219.3 345.643 c
219.233 345.702 218.985 345.931 218.75 346.15 c
218.514 346.37 218.209 346.654 218.071 346.781 c
217.934 346.908 217.687 347.137 217.522 347.289 c
217.357 347.44 217.05 347.725 216.839 347.92 c
216.628 348.116 216.381 348.343 216.29 348.424 c
216.198 348.506 215.891 348.787 215.606 349.051 c
215.322 349.315 215.076 349.542 215.061 349.559 c
215.044 349.574 214.785 349.815 214.483 350.095 c
214.182 350.374 213.889 350.646 213.833 350.697 c
213.778 350.749 213.53 350.978 213.283 351.205 c
213.036 351.432 212.729 351.716 212.6 351.836 c
212.471 351.955 212.224 352.183 212.051 352.34 c
211.878 352.496 211.571 352.778 211.369 352.966 c
211.167 353.153 210.919 353.382 210.818 353.473 c
210.718 353.565 210.412 353.847 210.139 354.1 c
209.866 354.352 209.619 354.58 209.59 354.607 c
209.561 354.634 209.289 354.884 208.984 355.162 c
208.68 355.441 208.396 355.699 208.354 355.736 c
208.311 355.772 208.059 355.999 207.792 356.24 c
207.526 356.481 207.219 356.757 207.109 356.853 c
207.001 356.949 206.746 357.177 206.544 357.359 c
206.341 357.543 206.036 357.818 205.865 357.972 c
205.694 358.125 205.441 358.353 205.303 358.479 c
205.165 358.605 204.858 358.881 204.62 359.092 c
204.382 359.303 204.128 359.531 204.055 359.6 c
203.982 359.667 203.676 359.942 203.376 360.211 c
203.076 360.48 202.821 360.707 202.811 360.715 c
202.799 360.722 202.536 360.957 202.225 361.235 c
201.914 361.514 201.615 361.783 201.561 361.834 c
201.508 361.884 201.255 362.112 201.0 362.342 c
200.745 362.572 200.437 362.848 200.317 362.954 c
200.196 363.06 199.942 363.289 199.751 363.462 c
199.561 363.635 199.256 363.91 199.073 364.074 c
198.891 364.238 198.637 364.465 198.508 364.577 c
198.378 364.69 198.071 364.963 197.825 365.185 c
197.578 365.407 197.328 365.636 197.268 365.692 c
197.208 365.749 196.902 366.024 196.589 366.304 c
196.275 366.583 196.018 366.811 196.016 366.811 c
196.013 366.811 195.771 367.04 195.477 367.32 c
195.184 367.6 194.878 367.897 194.798 367.979 c
194.718 368.062 194.507 368.289 194.329 368.482 c
194.151 368.676 193.844 369.007 193.648 369.219 c
193.45 369.43 193.243 369.658 193.187 369.726 c
193.131 369.793 192.87 370.077 192.605 370.356 c
192.34 370.636 192.078 370.911 192.023 370.969 c
191.966 371.025 191.754 371.252 191.549 371.472 c
191.345 371.691 191.04 372.019 190.871 372.199 c
190.702 372.379 190.49 372.607 190.398 372.706 c
190.308 372.805 190.017 373.114 189.752 373.394 c
189.487 373.673 189.254 373.918 189.234 373.94 c
189.214 373.96 189.0 374.189 188.758 374.447 c
188.516 374.705 188.209 375.028 188.075 375.164 c
187.941 375.3 187.725 375.526 187.594 375.667 c
187.463 375.808 187.157 376.133 186.915 376.389 c
186.672 376.645 186.456 376.873 186.434 376.897 c
186.412 376.919 186.178 377.166 185.913 377.445 c
185.648 377.725 185.359 378.025 185.27 378.115 c
185.181 378.204 184.963 378.433 184.786 378.623 c
184.608 378.815 184.27 379.197 184.035 379.474 c
183.8 379.75 183.417 380.205 183.186 380.484 c
182.955 380.763 182.68 381.089 182.575 381.209 c
182.471 381.329 182.278 381.558 182.147 381.717 c
182.016 381.876 181.713 382.235 181.473 382.514 c
181.233 382.793 181.033 383.023 181.028 383.025 c
181.024 383.027 180.826 383.254 180.588 383.528 c
180.35 383.803 180.045 384.151 179.909 384.303 c
179.773 384.454 179.572 384.683 179.461 384.81 c
179.35 384.939 179.055 385.272 178.806 385.551 c
178.557 385.83 178.34 386.071 178.325 386.087 c
178.31 386.103 178.105 386.331 177.869 386.595 c
177.633 386.858 177.326 387.195 177.186 387.344 c
177.046 387.493 176.839 387.719 176.726 387.848 c
176.612 387.976 176.311 388.309 176.055 388.588 c
175.8 388.866 175.587 389.1 175.583 389.105 c
175.578 389.111 175.369 389.34 175.118 389.614 c
174.866 389.889 174.559 390.251 174.435 390.42 c
174.31 390.59 174.152 390.818 174.083 390.928 c
174.013 391.037 173.904 391.353 173.84 391.63 c
173.776 391.906 173.586 392.361 173.419 392.641 c
173.252 392.919 173.054 393.216 172.979 393.301 c
172.903 393.385 172.742 393.613 172.62 393.809 c
172.499 394.003 172.193 394.392 171.942 394.672 c
171.691 394.951 171.298 395.406 171.068 395.684 c
170.839 395.96 170.532 396.306 170.385 396.451 c
170.238 396.598 170.039 396.825 169.941 396.959 c
169.844 397.092 169.555 397.429 169.299 397.708 c
169.044 397.987 168.816 398.228 168.794 398.244 c
168.771 398.261 168.586 398.486 168.382 398.748 c
168.177 399.009 167.872 399.328 167.702 399.459 c
167.533 399.59 167.289 399.817 167.161 399.967 c
167.032 400.115 166.725 400.443 166.479 400.697 c
166.232 400.951 166.016 401.18 165.998 401.205 c
165.98 401.231 165.803 401.481 165.602 401.762 c
165.402 402.041 165.111 402.374 164.955 402.502 c
164.798 402.629 164.665 402.855 164.659 403.004 c
164.653 403.153 164.648 403.504 164.648 403.783 c
164.648 404.061 164.346 404.517 163.977 404.793 c
163.608 405.069 163.302 405.298 163.298 405.301 c
163.294 405.303 162.986 405.531 162.615 405.808 c
162.244 406.084 161.939 406.314 161.936 406.316 c
161.935 406.319 161.635 406.549 161.27 406.825 c
160.906 407.102 160.603 407.343 160.597 407.36 c
160.59 407.378 160.582 407.606 160.579 407.867 c
160.576 408.128 160.385 408.57 160.154 408.85 c
159.924 409.128 159.619 409.551 159.477 409.789 c
159.335 410.027 159.2 410.256 159.178 410.297 c
159.155 410.339 158.984 410.6 158.797 410.876 c
158.609 411.152 158.32 411.567 158.154 411.797 c
157.988 412.026 157.824 412.256 157.79 412.305 c
157.756 412.354 157.557 412.624 157.346 412.902 c
157.135 413.182 157.163 413.412 157.407 413.416 c
157.651 413.419 158.159 413.423 158.535 413.426 c
158.911 413.428 159.831 413.43 160.579 413.43 c
161.328 413.43 162.248 413.428 162.623 413.426 c
162.999 413.423 163.613 413.421 163.988 413.421 c
164.364 413.421 164.975 413.647 165.346 413.924 c
165.717 414.2 166.023 414.517 166.025 414.626 c
166.028 414.735 166.337 414.853 166.712 414.887 c
167.087 414.92 167.7 414.975 168.073 415.009 c
168.447 415.043 169.06 415.032 169.436 414.986 c
169.811 414.94 170.426 414.837 170.802 414.759 c
171.178 414.681 171.72 414.573 172.007 414.522 c
172.294 414.47 172.599 414.382 172.685 414.326 c
172.771 414.271 173.149 414.055 173.525 413.846 c
173.901 413.638 174.236 413.454 174.269 413.439 c
174.302 413.423 174.609 413.214 174.952 412.974 c
175.294 412.733 175.622 412.505 175.68 412.467 c
175.737 412.428 176.042 412.218 176.358 412.002 c
176.673 411.785 177.004 411.556 177.093 411.493 c
177.182 411.431 177.49 411.224 177.776 411.033 c
178.063 410.844 178.398 410.617 178.52 410.531 c
178.642 410.444 178.949 410.236 179.202 410.069 c
179.455 409.902 179.797 409.674 179.961 409.56 c
180.126 409.448 180.431 409.246 180.64 409.11 c
180.849 408.975 181.186 408.747 181.388 408.603 c
181.589 408.459 181.896 408.245 182.07 408.128 c
182.243 408.011 182.545 407.782 182.74 407.621 c
182.936 407.46 183.244 407.229 183.424 407.109 c
183.604 406.989 183.92 406.763 184.126 406.606 c
184.333 406.45 184.638 406.23 184.805 406.117 c
184.972 406.004 185.302 405.775 185.54 405.608 c
185.778 405.441 186.085 405.226 186.223 405.129 c
186.361 405.033 186.698 404.805 186.972 404.622 c
187.245 404.44 187.551 404.232 187.65 404.162 c
187.751 404.092 188.11 403.863 188.45 403.654 c
188.79 403.446 189.098 403.251 189.133 403.223 c
189.169 403.193 189.463 402.967 189.788 402.719 c
190.112 402.472 190.42 402.194 190.471 402.103 c
190.522 402.012 190.648 401.783 190.75 401.595 c
190.852 401.406 191.061 401.024 191.215 400.744 c
191.369 400.465 191.59 400.061 191.708 399.848 c
191.825 399.634 191.952 399.405 191.989 399.34 c
192.027 399.275 192.167 398.995 192.301 398.719 c
192.434 398.442 192.672 397.987 192.83 397.708 c
192.988 397.429 193.156 397.1 193.203 396.978 c
193.25 396.855 193.33 396.627 193.381 396.471 c
193.431 396.315 193.564 395.96 193.675 395.684 c
193.786 395.406 193.979 394.951 194.103 394.672 c
194.227 394.392 194.402 394.012 194.491 393.827 c
194.58 393.643 194.687 393.414 194.73 393.319 c
194.773 393.225 194.927 392.919 195.073 392.641 c
195.22 392.361 195.471 391.906 195.63 391.63 c
195.79 391.353 195.941 391.109 195.966 391.088 c
195.991 391.067 196.29 390.839 196.629 390.581 c
196.968 390.323 197.275 390.091 197.311 390.065 c
197.347 390.039 197.684 389.816 198.06 389.571 c
198.435 389.326 198.751 389.118 198.762 389.109 c
198.773 389.102 199.078 388.905 199.439 388.673 c
199.801 388.44 200.162 388.213 200.24 388.166 c
200.318 388.118 200.626 387.933 200.923 387.753 c
201.221 387.573 201.599 387.347 201.764 387.25 c
201.928 387.153 202.236 386.972 202.447 386.847 c
202.658 386.722 203.056 386.493 203.332 386.339 c
203.608 386.185 203.913 386.012 204.011 385.955 c
204.108 385.897 204.496 385.673 204.871 385.457 c
205.247 385.24 205.561 385.059 205.57 385.053 c
205.579 385.047 205.885 384.863 206.249 384.645 c
206.613 384.425 206.997 384.196 207.102 384.137 c
207.206 384.076 207.514 383.899 207.785 383.742 c
208.056 383.586 208.456 383.359 208.674 383.24 c
208.892 383.12 209.199 382.947 209.356 382.855 c
209.513 382.765 209.931 382.537 210.285 382.349 c
210.639 382.16 210.944 381.996 210.965 381.983 c
210.985 381.971 211.308 381.8 211.684 381.603 c
212.059 381.407 212.48 381.19 212.62 381.119 c
212.761 381.049 213.068 380.895 213.304 380.777 c
213.54 380.66 214.005 380.432 214.338 380.27 c
214.67 380.108 214.976 379.959 215.016 379.937 c
215.056 379.917 215.396 379.728 215.773 379.52 c
216.148 379.311 216.531 379.103 216.622 379.056 c
216.712 379.009 216.998 378.742 217.256 378.462 c
217.514 378.182 217.747 377.93 217.773 377.901 c
217.8 377.873 218.011 377.645 218.242 377.394 c
218.473 377.143 218.778 376.816 218.92 376.668 c
219.062 376.519 219.277 376.291 219.398 376.16 c
219.518 376.029 219.825 375.701 220.08 375.43 c
220.335 375.158 220.548 374.932 220.553 374.927 c
220.558 374.922 220.777 374.689 221.042 374.409 c
221.306 374.13 221.608 373.811 221.715 373.701 c
221.822 373.592 222.037 373.363 222.192 373.193 c
222.349 373.024 222.654 372.7 222.872 372.473 c
223.089 372.246 223.306 372.018 223.352 371.966 c
223.399 371.914 223.656 371.645 223.922 371.367 c
224.189 371.091 224.458 370.81 224.52 370.746 c
224.581 370.681 224.799 370.452 225.004 370.238 c
225.208 370.023 225.514 369.703 225.683 369.526 c
225.852 369.35 226.068 369.121 226.164 369.02 c
226.259 368.917 226.557 368.607 226.827 368.331 c
227.096 368.055 227.325 367.817 227.336 367.805 c
227.347 367.791 227.571 367.562 227.833 367.296 c
228.095 367.029 228.403 366.718 228.517 366.603 c
228.63 366.488 228.859 366.26 229.026 366.096 c
229.193 365.931 229.498 365.623 229.704 365.412 c
229.91 365.201 230.137 364.973 230.208 364.904 c
230.279 364.837 230.565 364.555 230.843 364.278 c
231.12 364.002 231.37 363.752 231.396 363.723 c
231.424 363.693 231.653 363.465 231.906 363.215 c
232.16 362.965 232.467 362.657 232.59 362.532 c
232.712 362.407 232.941 362.178 233.098 362.023 c
233.255 361.869 233.561 361.564 233.776 361.344 c
233.992 361.125 234.222 360.897 234.286 360.838 c
234.351 360.777 234.633 360.502 234.913 360.226 c
235.193 359.949 235.448 359.694 235.479 359.66 c
235.51 359.627 235.742 359.398 235.995 359.153 c
236.248 358.908 236.555 358.605 236.677 358.479 c
236.8 358.353 237.031 358.125 237.191 357.972 c
237.351 357.818 237.657 357.52 237.871 357.308 c
238.085 357.096 238.319 356.868 238.392 356.801 c
238.465 356.733 238.772 356.453 239.074 356.178 c
239.376 355.903 239.626 355.676 239.632 355.674 c
239.637 355.672 239.944 355.457 240.314 355.195 c
240.685 354.935 241.294 354.512 241.667 354.256 c
242.04 354.0 242.397 353.756 242.46 353.715 c
242.522 353.674 242.829 353.467 243.142 353.255 c
243.455 353.043 243.797 352.815 243.902 352.748 c
244.007 352.68 244.313 352.481 244.581 352.307 c
244.85 352.131 245.204 351.904 245.368 351.803 c
245.533 351.7 245.84 351.506 246.052 351.371 c
246.263 351.235 246.628 351.007 246.864 350.863 c
247.099 350.72 247.407 350.532 247.547 350.445 c
247.687 350.358 248.065 350.13 248.387 349.937 c
248.709 349.745 249.015 349.561 249.065 349.529 c
249.117 349.498 249.466 349.296 249.842 349.079 c
250.218 348.862 250.567 348.66 250.618 348.629 c
250.669 348.598 250.976 348.421 251.301 348.234 c
251.625 348.049 252.016 347.822 252.169 347.73 c
252.322 347.64 252.628 347.462 252.848 347.336 c
253.068 347.211 253.463 346.982 253.725 346.829 c
253.987 346.676 254.294 346.496 254.408 346.432 c
254.521 346.366 254.839 346.138 255.114 345.924 c
255.39 345.709 255.697 345.483 255.798 345.422 c
255.898 345.359 256.196 345.131 256.46 344.913 c
256.724 344.695 257.03 344.426 257.139 344.314 c
257.248 344.201 257.444 343.975 257.575 343.81 c
257.706 343.647 257.948 343.283 258.113 343.004 c
258.278 342.726 258.423 342.269 258.436 341.989 c
258.449 341.71 258.457 341.255 258.456 340.978 c
258.454 340.703 258.465 340.247 258.48 339.967 c
258.497 339.687 258.545 339.229 258.589 338.951 c
258.633 338.672 258.677 338.416 258.686 338.382 c
258.696 338.348 258.752 338.12 258.812 337.875 c
258.873 337.629 258.992 337.202 259.079 336.926 c
259.166 336.65 259.324 336.195 259.431 335.917 c
259.537 335.639 259.724 335.184 259.846 334.906 c
259.967 334.629 260.067 334.4 260.067 334.397 c
260.067 334.394 260.178 334.163 260.315 333.884 c
260.45 333.604 260.692 333.149 260.853 332.873 c
261.013 332.598 261.207 332.308 261.285 332.228 c
261.362 332.15 261.605 331.922 261.825 331.721 c
262.045 331.52 262.353 331.233 262.509 331.086 c
262.665 330.937 262.91 330.709 263.054 330.578 c
263.198 330.447 263.503 330.164 263.732 329.949 c
263.962 329.735 264.211 329.507 264.287 329.441 c
264.362 329.377 264.67 329.101 264.97 328.827 c
265.27 328.554 265.519 328.327 265.523 328.323 c
265.527 328.319 265.785 328.088 266.097 327.809 c
266.408 327.53 266.711 327.257 266.771 327.202 c
266.831 327.147 267.087 326.919 267.341 326.695 c
267.595 326.471 267.9 326.197 268.021 326.088 c
268.141 325.978 268.402 325.75 268.603 325.58 c
268.802 325.41 269.109 325.146 269.284 324.991 c
269.46 324.837 269.725 324.61 269.874 324.488 c
270.022 324.366 270.33 324.107 270.557 323.914 c
270.784 323.721 271.057 323.492 271.164 323.406 c
271.271 323.321 271.577 323.069 271.843 322.848 c
272.109 322.625 272.389 322.397 272.464 322.339 c
272.539 322.281 272.847 322.04 273.147 321.803 c
273.447 321.565 273.737 321.337 273.79 321.295 c
273.844 321.253 274.077 320.992 274.308 320.716 c
274.54 320.44 274.803 320.076 274.894 319.91 c
274.984 319.743 275.102 319.515 275.155 319.402 c
275.208 319.29 275.39 318.97 275.559 318.691 c
275.728 318.412 275.99 318.002 276.142 317.779 c
276.293 317.558 276.446 317.331 276.481 317.275 c
276.517 317.22 276.711 316.946 276.913 316.667 c
277.115 316.388 277.394 316.015 277.531 315.838 c
277.669 315.661 277.843 315.433 277.916 315.33 c
277.989 315.228 278.229 314.916 278.449 314.637 c
278.669 314.358 278.917 314.051 278.999 313.955 c
279.081 313.859 279.266 313.633 279.41 313.452 c
279.554 313.272 279.859 312.897 280.088 312.621 c
280.317 312.345 280.509 312.116 280.514 312.113 c
280.518 312.109 280.715 311.879 280.95 311.6 c
281.186 311.321 281.489 310.969 281.625 310.817 c
281.76 310.666 281.957 310.437 282.065 310.31 c
282.171 310.182 282.458 309.851 282.703 309.574 c
282.947 309.298 283.147 309.071 283.147 309.071 c
0.24 0.0 0.27 0.0 sc
q
f
Q
0.42 0.0 0.24 0.0 sc
S
n
251.891 330.747 m
251.891 330.747 251.605 330.884 251.256 331.051 c
250.907 331.218 250.6 331.363 250.573 331.373 c
250.547 331.384 250.218 331.545 249.842 331.73 c
249.466 331.916 249.035 332.137 248.884 332.22 c
248.733 332.303 248.428 332.506 248.206 332.67 c
247.983 332.834 247.675 333.06 247.52 333.172 c
247.364 333.284 247.057 333.515 246.836 333.685 c
246.616 333.854 246.314 334.083 246.165 334.192 c
246.016 334.302 245.709 334.532 245.482 334.705 c
245.255 334.878 244.951 335.106 244.807 335.215 c
244.662 335.322 244.356 335.549 244.127 335.717 c
243.898 335.886 243.59 336.114 243.441 336.225 c
243.293 336.334 242.986 336.559 242.759 336.723 c
242.532 336.887 242.219 337.113 242.064 337.225 c
241.908 337.337 241.602 337.56 241.385 337.719 c
241.167 337.878 240.859 338.106 240.702 338.227 c
240.544 338.346 240.237 338.572 240.019 338.728 c
239.801 338.886 239.499 339.114 239.348 339.236 c
239.197 339.358 238.89 339.589 238.665 339.748 c
238.441 339.908 238.134 340.138 237.982 340.258 c
237.831 340.378 237.526 340.603 237.304 340.76 c
237.081 340.916 236.773 341.142 236.617 341.262 c
236.462 341.383 236.155 341.62 235.935 341.79 c
235.715 341.96 235.424 342.189 235.288 342.298 c
235.152 342.407 234.845 342.648 234.605 342.834 c
234.365 343.019 234.075 343.247 233.959 343.341 c
233.844 343.435 233.539 343.676 233.281 343.877 c
233.023 344.078 232.731 344.304 232.633 344.38 c
232.535 344.456 232.227 344.697 231.95 344.916 c
231.673 345.135 231.384 345.364 231.309 345.424 c
231.233 345.484 230.925 345.73 230.625 345.971 c
230.325 346.212 230.039 346.44 229.99 346.478 c
229.942 346.518 229.637 346.761 229.312 347.019 c
228.988 347.276 228.703 347.505 228.678 347.525 c
228.653 347.547 228.346 347.791 227.995 348.068 c
227.644 348.346 227.065 348.801 226.71 349.08 c
226.355 349.358 226.048 349.6 226.027 349.615 c
226.007 349.631 225.716 349.859 225.38 350.123 c
225.044 350.387 224.739 350.628 224.701 350.659 c
224.663 350.69 224.371 350.919 224.051 351.166 c
223.731 351.414 223.424 351.652 223.368 351.694 c
223.312 351.736 223.018 351.964 222.714 352.198 c
222.41 352.433 222.104 352.669 222.035 352.724 c
221.965 352.778 221.669 353.006 221.376 353.23 c
221.082 353.456 220.775 353.69 220.693 353.753 c
220.611 353.815 220.311 354.044 220.027 354.261 c
219.744 354.478 219.436 354.713 219.345 354.783 c
219.253 354.853 218.953 355.082 218.678 355.291 c
218.402 355.499 218.097 355.73 217.999 355.804 c
217.902 355.877 217.603 356.104 217.336 356.309 c
217.069 356.512 216.762 356.746 216.653 356.829 c
216.545 356.912 216.249 357.14 215.995 357.336 c
215.741 357.532 215.434 357.767 215.311 357.857 c
215.189 357.948 214.889 358.177 214.645 358.365 c
214.4 358.554 214.095 358.787 213.966 358.883 c
213.837 358.979 213.547 359.208 213.319 359.391 c
213.092 359.573 212.785 359.815 212.636 359.926 c
212.487 360.038 212.222 360.265 212.047 360.43 c
211.872 360.594 211.564 360.853 211.365 361.004 c
211.165 361.155 210.885 361.384 210.742 361.511 c
210.6 361.638 210.294 361.886 210.062 362.061 c
209.831 362.237 209.546 362.466 209.429 362.57 c
209.311 362.675 209.004 362.929 208.746 363.135 c
208.488 363.341 208.21 363.569 208.127 363.643 c
208.045 363.716 207.738 363.979 207.444 364.23 c
207.151 364.48 206.886 364.706 206.855 364.732 c
206.823 364.76 206.538 365.01 206.22 365.289 c
205.902 365.567 205.622 365.811 205.598 365.83 c
205.574 365.849 205.307 366.077 205.005 366.338 c
204.702 366.599 204.395 366.86 204.321 366.92 c
204.248 366.98 203.883 367.299 203.509 367.628 c
203.136 367.957 202.674 368.363 202.483 368.53 c
202.293 368.697 201.985 368.969 201.801 369.133 c
201.616 369.297 201.359 369.525 201.23 369.641 c
201.102 369.755 200.795 370.025 200.547 370.242 c
200.3 370.459 200.042 370.687 199.974 370.75 c
199.905 370.812 199.6 371.084 199.296 371.353 c
198.991 371.621 198.734 371.848 198.726 371.855 c
198.716 371.864 198.45 372.1 198.135 372.379 c
197.819 372.658 197.52 372.925 197.469 372.972 c
197.418 373.019 197.162 373.247 196.899 373.478 c
196.637 373.711 196.331 373.982 196.217 374.082 c
196.104 374.182 195.848 374.41 195.648 374.59 c
195.447 374.77 195.142 375.043 194.968 375.196 c
194.795 375.35 194.539 375.576 194.398 375.699 c
194.259 375.822 193.952 376.094 193.717 376.303 c
193.481 376.511 193.224 376.739 193.145 376.81 c
193.067 376.88 192.759 377.153 192.462 377.418 c
192.165 377.682 191.908 377.91 191.893 377.926 c
191.876 377.94 191.607 378.182 191.294 378.462 c
190.981 378.742 190.689 379.003 190.645 379.041 c
190.6 379.08 190.346 379.307 190.079 379.545 c
189.812 379.782 189.343 380.205 189.036 380.484 c
188.729 380.763 188.333 381.121 188.155 381.281 c
187.977 381.44 187.727 381.669 187.598 381.789 c
187.469 381.908 187.163 382.189 186.919 382.41 c
186.674 382.632 186.423 382.86 186.36 382.918 c
186.298 382.975 185.998 383.248 185.694 383.524 c
185.39 383.801 185.133 384.034 185.124 384.042 c
185.115 384.05 184.866 384.278 184.571 384.55 c
184.276 384.821 183.971 385.101 183.893 385.172 c
183.814 385.242 183.565 385.471 183.338 385.68 c
183.111 385.888 182.804 386.17 182.655 386.306 c
182.506 386.441 182.26 386.67 182.106 386.814 c
181.953 386.957 181.646 387.241 181.424 387.444 c
181.202 387.647 180.955 387.874 180.874 387.947 c
180.794 388.021 180.489 388.305 180.196 388.578 c
179.902 388.852 179.657 389.08 179.65 389.086 c
179.643 389.091 179.391 389.323 179.088 389.603 c
178.786 389.884 178.484 390.163 178.418 390.227 c
178.352 390.289 178.112 390.517 177.886 390.733 c
177.659 390.95 177.351 391.255 177.202 391.411 c
177.054 391.567 176.839 391.794 176.726 391.914 c
176.612 392.034 176.307 392.359 176.047 392.636 c
175.787 392.912 175.572 393.141 175.57 393.143 c
175.567 393.146 175.349 393.376 175.084 393.655 c
174.82 393.935 174.515 394.26 174.406 394.377 c
174.297 394.494 174.083 394.724 173.929 394.885 c
173.775 395.047 173.468 395.374 173.246 395.611 c
173.023 395.85 172.811 396.076 172.773 396.115 c
172.734 396.154 172.491 396.415 172.231 396.693 c
171.972 396.972 171.698 397.269 171.623 397.352 c
171.547 397.435 171.335 397.664 171.149 397.859 c
170.965 398.056 170.658 398.385 170.466 398.591 c
170.275 398.797 170.064 399.023 169.998 399.094 c
169.932 399.164 169.667 399.45 169.409 399.728 c
169.151 400.008 168.898 400.281 168.847 400.336 c
168.795 400.392 168.583 400.62 168.377 400.845 c
168.17 401.069 167.864 401.404 167.697 401.59 c
167.53 401.774 167.323 402.003 167.237 402.098 c
167.15 402.192 167.032 402.496 166.975 402.772 c
166.917 403.049 166.804 403.504 166.725 403.783 c
166.645 404.061 166.456 404.504 166.305 404.766 c
166.153 405.026 166.023 405.255 166.014 405.272 c
166.005 405.29 165.837 405.533 165.641 405.814 c
165.445 406.094 165.146 406.491 164.977 406.697 c
164.809 406.903 164.629 407.13 164.578 407.2 c
164.526 407.271 164.309 407.557 164.093 407.835 c
163.878 408.113 163.613 408.423 163.504 408.522 c
163.395 408.622 163.182 408.851 163.031 409.029 c
162.88 409.209 162.572 409.56 162.348 409.808 c
162.124 410.056 161.921 410.284 161.896 410.316 c
161.872 410.348 161.694 410.6 161.501 410.876 c
161.307 411.152 161.021 411.471 160.866 411.584 c
160.71 411.696 160.464 411.925 160.32 412.092 c
160.176 412.259 160.335 412.076 160.104 412.303 c
159.873 412.529 160.32 412.189 160.275 412.24 c
160.231 412.293 160.471 412.287 161.135 412.287 c
161.799 412.287 162.021 412.414 162.15 412.303 c
162.279 412.19 162.303 412.439 162.494 412.272 c
162.685 412.104 162.786 412.259 162.971 412.092 c
163.155 411.925 163.414 411.696 163.545 411.584 c
163.677 411.471 163.984 411.204 164.227 410.99 c
164.471 410.775 164.734 410.55 164.813 410.486 c
164.891 410.424 165.196 410.166 165.492 409.913 c
165.788 409.66 166.059 409.432 166.094 409.404 c
166.129 409.378 166.436 409.128 166.776 408.85 c
167.116 408.57 167.687 408.113 168.045 407.835 c
168.403 407.557 168.709 407.317 168.725 407.304 c
168.74 407.29 169.047 407.065 169.407 406.801 c
169.766 406.537 170.074 406.311 170.09 406.298 c
170.105 406.284 170.426 406.065 170.802 405.809 c
171.178 405.553 171.5 405.335 171.518 405.324 c
171.535 405.314 171.84 405.123 172.196 404.902 c
172.551 404.681 172.949 404.452 173.081 404.395 c
173.212 404.337 173.52 404.184 173.764 404.053 c
174.008 403.922 174.516 403.835 174.892 403.857 c
175.267 403.881 175.592 403.988 175.614 404.096 c
175.636 404.202 175.636 404.45 175.614 404.647 c
175.592 404.843 175.565 405.071 175.554 405.154 c
175.542 405.236 175.505 405.533 175.472 405.814 c
175.439 406.094 175.384 406.549 175.351 406.825 c
175.317 407.102 175.265 407.557 175.234 407.835 c
175.204 408.113 175.268 408.399 175.376 408.471 c
175.485 408.541 175.68 408.541 175.809 408.471 c
175.937 408.399 176.243 408.27 176.487 408.181 c
176.731 408.092 177.186 407.864 177.497 407.674 c
177.807 407.483 178.115 407.296 178.18 407.258 c
178.245 407.219 178.598 406.992 178.964 406.754 c
179.33 406.517 179.637 406.317 179.646 406.313 c
179.655 406.307 179.968 406.103 180.341 405.859 c
180.715 405.617 181.064 405.393 181.117 405.361 c
181.17 405.33 181.477 405.143 181.799 404.945 c
182.121 404.748 182.499 404.52 182.64 404.437 c
182.78 404.356 183.087 404.177 183.323 404.039 c
183.558 403.9 183.965 403.672 184.227 403.531 c
184.49 403.391 184.795 403.2 184.906 403.109 c
185.017 403.018 185.295 402.791 185.525 402.605 c
185.754 402.421 185.973 402.041 186.01 401.762 c
186.047 401.481 186.14 401.024 186.216 400.744 c
186.292 400.465 186.381 400.173 186.414 400.095 c
186.447 400.017 186.536 399.788 186.612 399.588 c
186.688 399.387 186.838 398.995 186.947 398.719 c
187.055 398.442 187.248 397.987 187.375 397.708 c
187.502 397.429 187.657 397.123 187.719 397.029 c
187.781 396.935 187.903 396.707 187.989 396.522 c
188.076 396.338 188.208 395.96 188.281 395.684 c
188.355 395.406 188.529 394.951 188.669 394.672 c
188.809 394.392 188.985 394.065 189.061 393.945 c
189.136 393.826 189.265 393.598 189.347 393.437 c
189.429 393.278 189.655 392.919 189.849 392.641 c
190.042 392.361 190.282 392.037 190.382 391.92 c
190.482 391.802 190.658 391.576 190.774 391.416 c
190.89 391.257 191.195 390.956 191.452 390.748 c
191.71 390.54 191.997 390.311 192.091 390.24 c
192.184 390.17 192.492 389.945 192.774 389.742 c
193.057 389.538 193.385 389.309 193.502 389.232 c
193.62 389.157 193.927 388.952 194.185 388.777 c
194.442 388.602 194.784 388.374 194.943 388.27 c
195.103 388.165 195.409 387.969 195.623 387.834 c
195.837 387.698 196.179 387.472 196.383 387.33 c
196.587 387.19 196.895 386.986 197.065 386.879 c
197.236 386.772 197.593 386.544 197.857 386.371 c
198.122 386.199 198.429 386.003 198.54 385.935 c
198.651 385.867 199.017 385.639 199.352 385.428 c
199.686 385.216 199.992 385.023 200.029 385.0 c
200.067 384.978 200.405 384.766 200.781 384.531 c
201.157 384.296 201.492 384.086 201.526 384.065 c
201.56 384.045 201.867 383.856 202.209 383.647 c
202.551 383.437 202.934 383.212 203.061 383.145 c
203.187 383.076 203.493 382.904 203.739 382.761 c
203.986 382.617 204.406 382.389 204.673 382.254 c
204.939 382.118 205.247 381.96 205.356 381.902 c
205.465 381.844 205.859 381.649 206.233 381.47 c
206.606 381.29 206.988 381.108 207.081 381.066 c
207.174 381.025 207.481 380.887 207.764 380.758 c
208.046 380.63 208.57 380.402 208.927 380.251 c
209.285 380.1 209.592 379.97 209.609 379.962 c
209.627 379.954 209.948 379.787 210.322 379.592 c
210.696 379.396 211.106 379.176 211.235 379.103 c
211.364 379.03 211.67 378.816 211.917 378.629 c
212.164 378.44 212.451 378.211 212.555 378.119 c
212.66 378.028 212.967 377.766 213.239 377.536 c
213.51 377.307 213.776 377.078 213.83 377.028 c
213.883 376.978 214.187 376.709 214.505 376.43 c
214.822 376.151 215.083 375.923 215.085 375.923 c
215.087 375.923 215.342 375.696 215.65 375.42 c
215.959 375.144 216.267 374.872 216.334 374.816 c
216.401 374.762 216.661 374.533 216.912 374.309 c
217.163 374.085 217.47 373.811 217.595 373.701 c
217.72 373.592 217.973 373.363 218.157 373.193 c
218.341 373.024 218.646 372.747 218.835 372.576 c
219.024 372.406 219.275 372.179 219.393 372.069 c
219.51 371.96 219.818 371.681 220.075 371.447 c
220.333 371.215 220.582 370.988 220.628 370.944 c
220.675 370.9 220.96 370.636 221.263 370.356 c
221.565 370.077 221.834 369.829 221.86 369.807 c
221.887 369.783 222.133 369.555 222.406 369.299 c
222.68 369.043 222.985 368.759 223.085 368.668 c
223.186 368.576 223.429 368.35 223.626 368.164 c
223.824 367.979 224.131 367.663 224.309 367.463 c
224.487 367.262 224.692 367.032 224.766 366.954 c
224.84 366.876 225.087 366.583 225.316 366.304 c
225.545 366.024 225.791 365.719 225.861 365.625 c
225.932 365.53 226.114 365.302 226.265 365.117 c
226.416 364.933 226.718 364.555 226.936 364.278 c
227.154 364.002 227.338 363.767 227.344 363.756 c
227.351 363.746 227.523 363.518 227.729 363.248 c
227.934 362.979 228.241 362.565 228.412 362.328 c
228.583 362.091 228.748 361.861 228.779 361.819 c
228.81 361.777 228.948 361.514 229.086 361.235 c
229.224 360.957 229.495 360.502 229.688 360.226 c
229.881 359.949 230.048 359.62 230.06 359.494 c
230.07 359.368 230.088 359.141 230.1 358.986 c
230.11 358.833 230.11 358.64 230.1 358.555 c
230.088 358.471 230.048 358.242 230.011 358.047 c
229.974 357.853 229.941 357.464 229.939 357.185 c
229.937 356.907 229.967 356.588 230.007 356.478 c
230.047 356.367 230.126 356.14 230.184 355.973 c
230.242 355.807 230.549 355.455 230.867 355.191 c
231.186 354.928 231.464 354.7 231.486 354.684 c
231.508 354.668 231.81 354.427 232.157 354.147 c
232.504 353.868 232.793 353.635 232.8 353.63 c
232.807 353.625 233.101 353.397 233.454 353.123 c
233.807 352.849 234.113 352.611 234.133 352.596 c
234.152 352.58 234.458 352.353 234.811 352.092 c
235.165 351.831 235.472 351.603 235.494 351.585 c
235.517 351.567 235.837 351.339 236.205 351.078 c
236.574 350.816 236.881 350.598 236.888 350.593 c
236.895 350.588 237.205 350.376 237.579 350.123 c
237.952 349.871 238.283 349.647 238.314 349.625 c
238.345 349.604 238.652 349.403 238.996 349.179 c
239.341 348.954 239.692 348.726 239.776 348.672 c
239.861 348.617 240.169 348.425 240.459 348.244 c
240.75 348.065 241.108 347.838 241.255 347.74 c
241.401 347.644 241.707 347.445 241.934 347.3 c
242.161 347.154 242.49 346.926 242.665 346.793 c
242.841 346.659 243.148 346.447 243.348 346.321 c
243.548 346.195 243.884 345.967 244.096 345.814 c
244.307 345.66 244.613 345.451 244.774 345.349 c
244.936 345.246 245.277 345.018 245.53 344.84 c
245.783 344.663 246.091 344.4 246.213 344.258 c
246.335 344.115 246.52 343.889 246.622 343.755 c
246.725 343.621 246.857 343.283 246.917 343.004 c
246.977 342.726 247.091 342.269 247.171 341.989 c
247.25 341.71 247.362 341.255 247.42 340.978 c
247.477 340.703 247.583 340.247 247.655 339.967 c
247.726 339.687 247.789 339.452 247.793 339.445 c
247.798 339.437 247.893 339.209 248.004 338.937 c
248.115 338.666 248.328 338.215 248.477 337.935 c
248.626 337.657 248.84 337.281 248.953 337.102 c
249.066 336.922 249.206 336.695 249.264 336.6 c
249.322 336.503 249.521 336.195 249.708 335.917 c
249.894 335.639 250.154 335.267 250.286 335.092 c
250.417 334.916 250.583 334.686 250.654 334.582 c
250.726 334.478 250.942 334.163 251.135 333.884 c
251.328 333.604 251.577 333.268 251.689 333.135 c
251.799 333.001 251.974 332.775 252.076 332.632 c
252.178 332.488 252.355 332.143 252.471 331.863 c
252.587 331.583 252.681 331.354 252.681 331.354 c
0.12 0.0 0.24 0.0 sc
f
1.3 w
n
141.287 425.935 m
353.824 225.108 l
[/DeviceGray] cs 0.502 sc
S
0.5 w
2.5 M
n
512.529 328.334 m
500.142 326.56 l
487.778 324.788 l
475.391 323.156 l
463.027 321.525 l
454.029 320.391 l
450.64 320.036 l
438.276 318.547 l
425.889 317.199 l
413.525 315.923 l
401.137 314.717 l
388.773 313.653 l
376.386 312.66 l
364.022 311.738 l
351.66 310.958 l
339.272 310.32 l
326.908 309.752 l
314.52 309.327 l
302.157 309.043 l
289.77 308.83 l
277.406 308.76 l
265.018 308.76 l
265.018 308.76 l
141.287 308.76 l
141.287 309.675 l
141.287 659.389 l
512.529 659.389 l
512.529 328.381 l
512.529 328.334 l
h
S
4.0 M
n
211.269 369.016 m
210.08 367.397 197.566 374.571 183.32 385.039 c
169.075 395.507 158.49 405.306 159.68 406.925 c
160.869 408.544 173.382 401.369 187.628 390.901 c
201.874 380.434 212.458 370.635 211.269 369.016 c
h
[/DeviceCMYK] cs 0.3 0.0 0.27 0.0 sc
q
f
Q
1.0 0.0 0.55 0.0 sc
S
n
202.905 375.659 m
202.132 374.565 193.702 379.19 184.075 385.989 c
174.449 392.789 167.271 399.187 168.044 400.281 c
168.816 401.376 177.247 396.751 186.874 389.951 c
196.5 383.151 203.678 376.752 202.905 375.659 c
h
0.74 0.0 0.62 0.0 sc
f
1.3 w
n
141.287 425.935 m
353.824 225.108 l
[/DeviceGray] cs 0.502 sc
S
Q
/GONAAA+Helvetica-Bold /Font _pdfUndefineResource
/N49 /Font _pdfUndefineResource
/JLBBAA+Times-Roman /Font _pdfUndefineResource
/N55 /Font _pdfUndefineResource
/JHABAA+Symbol /Font _pdfUndefineResource
/N46 /Font _pdfUndefineResource
/ZFNBAA+Helvetica /Font _pdfUndefineResource
/N52 /Font _pdfUndefineResource
userdict /pgsave get restore
showpage
PDFVars/TermAll get exec end end
grestore
%%PageTrailer
%%Trailer
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ font GONAAA+Helvetica-Bold
%%+ font JLBBAA+Times-Roman
%%+ font JHABAA+Symbol
%%+ font ZFNBAA+Helvetica
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EOF
